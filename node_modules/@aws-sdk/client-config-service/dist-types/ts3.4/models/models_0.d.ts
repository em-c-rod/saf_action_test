import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { ConfigServiceServiceException as __BaseException } from "./ConfigServiceServiceException";
export interface AccountAggregationSource {
  AccountIds: string[] | undefined;
  AllAwsRegions?: boolean;
  AwsRegions?: string[];
}
export interface ComplianceContributorCount {
  CappedCount?: number;
  CapExceeded?: boolean;
}
export declare enum ComplianceType {
  Compliant = "COMPLIANT",
  Insufficient_Data = "INSUFFICIENT_DATA",
  Non_Compliant = "NON_COMPLIANT",
  Not_Applicable = "NOT_APPLICABLE",
}
export interface Compliance {
  ComplianceType?: ComplianceType | string;
  ComplianceContributorCount?: ComplianceContributorCount;
}
export interface AggregateComplianceByConfigRule {
  ConfigRuleName?: string;
  Compliance?: Compliance;
  AccountId?: string;
  AwsRegion?: string;
}
export declare enum ConformancePackComplianceType {
  COMPLIANT = "COMPLIANT",
  INSUFFICIENT_DATA = "INSUFFICIENT_DATA",
  NON_COMPLIANT = "NON_COMPLIANT",
}
export interface AggregateConformancePackCompliance {
  ComplianceType?: ConformancePackComplianceType | string;
  CompliantRuleCount?: number;
  NonCompliantRuleCount?: number;
  TotalRuleCount?: number;
}
export interface AggregateComplianceByConformancePack {
  ConformancePackName?: string;
  Compliance?: AggregateConformancePackCompliance;
  AccountId?: string;
  AwsRegion?: string;
}
export interface ComplianceSummary {
  CompliantResourceCount?: ComplianceContributorCount;
  NonCompliantResourceCount?: ComplianceContributorCount;
  ComplianceSummaryTimestamp?: Date;
}
export interface AggregateComplianceCount {
  GroupName?: string;
  ComplianceSummary?: ComplianceSummary;
}
export interface AggregateConformancePackComplianceCount {
  CompliantConformancePackCount?: number;
  NonCompliantConformancePackCount?: number;
}
export interface AggregateConformancePackComplianceFilters {
  ConformancePackName?: string;
  ComplianceType?: ConformancePackComplianceType | string;
  AccountId?: string;
  AwsRegion?: string;
}
export interface AggregateConformancePackComplianceSummary {
  ComplianceSummary?: AggregateConformancePackComplianceCount;
  GroupName?: string;
}
export interface AggregateConformancePackComplianceSummaryFilters {
  AccountId?: string;
  AwsRegion?: string;
}
export declare enum AggregateConformancePackComplianceSummaryGroupKey {
  ACCOUNT_ID = "ACCOUNT_ID",
  AWS_REGION = "AWS_REGION",
}
export declare enum AggregatedSourceStatusType {
  FAILED = "FAILED",
  OUTDATED = "OUTDATED",
  SUCCEEDED = "SUCCEEDED",
}
export declare enum AggregatedSourceType {
  ACCOUNT = "ACCOUNT",
  ORGANIZATION = "ORGANIZATION",
}
export interface AggregatedSourceStatus {
  SourceId?: string;
  SourceType?: AggregatedSourceType | string;
  AwsRegion?: string;
  LastUpdateStatus?: AggregatedSourceStatusType | string;
  LastUpdateTime?: Date;
  LastErrorCode?: string;
  LastErrorMessage?: string;
}
export interface EvaluationResultQualifier {
  ConfigRuleName?: string;
  ResourceType?: string;
  ResourceId?: string;
}
export interface EvaluationResultIdentifier {
  EvaluationResultQualifier?: EvaluationResultQualifier;
  OrderingTimestamp?: Date;
}
export interface AggregateEvaluationResult {
  EvaluationResultIdentifier?: EvaluationResultIdentifier;
  ComplianceType?: ComplianceType | string;
  ResultRecordedTime?: Date;
  ConfigRuleInvokedTime?: Date;
  Annotation?: string;
  AccountId?: string;
  AwsRegion?: string;
}
export declare enum ResourceType {
  AccessAnalyzerAnalyzer = "AWS::AccessAnalyzer::Analyzer",
  AccountPublicAccessBlock = "AWS::S3::AccountPublicAccessBlock",
  Alarm = "AWS::CloudWatch::Alarm",
  Api = "AWS::ApiGatewayV2::Api",
  AppConfigApplication = "AWS::AppConfig::Application",
  AppSyncGraphQLApi = "AWS::AppSync::GraphQLApi",
  Application = "AWS::ElasticBeanstalk::Application",
  ApplicationVersion = "AWS::ElasticBeanstalk::ApplicationVersion",
  AssociationCompliance = "AWS::SSM::AssociationCompliance",
  AthenaDataCatalog = "AWS::Athena::DataCatalog",
  AthenaWorkGroup = "AWS::Athena::WorkGroup",
  AutoScalingGroup = "AWS::AutoScaling::AutoScalingGroup",
  BackupPlan = "AWS::Backup::BackupPlan",
  BackupRecoveryPoint = "AWS::Backup::RecoveryPoint",
  BackupSelection = "AWS::Backup::BackupSelection",
  BackupVault = "AWS::Backup::BackupVault",
  BatchComputeEnvironment = "AWS::Batch::ComputeEnvironment",
  BatchJobQueue = "AWS::Batch::JobQueue",
  Bucket = "AWS::S3::Bucket",
  Certificate = "AWS::ACM::Certificate",
  CloudFormationProduct = "AWS::ServiceCatalog::CloudFormationProduct",
  CloudFormationProvisionedProduct = "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
  Cluster = "AWS::Redshift::Cluster",
  ClusterParameterGroup = "AWS::Redshift::ClusterParameterGroup",
  ClusterSecurityGroup = "AWS::Redshift::ClusterSecurityGroup",
  ClusterSnapshot = "AWS::Redshift::ClusterSnapshot",
  ClusterSubnetGroup = "AWS::Redshift::ClusterSubnetGroup",
  CodeDeployApplication = "AWS::CodeDeploy::Application",
  CodeDeployDeploymentConfig = "AWS::CodeDeploy::DeploymentConfig",
  CodeDeployDeploymentGroup = "AWS::CodeDeploy::DeploymentGroup",
  ConformancePackCompliance = "AWS::Config::ConformancePackCompliance",
  CustomerGateway = "AWS::EC2::CustomerGateway",
  DBCluster = "AWS::RDS::DBCluster",
  DBClusterSnapshot = "AWS::RDS::DBClusterSnapshot",
  DBInstance = "AWS::RDS::DBInstance",
  DBSecurityGroup = "AWS::RDS::DBSecurityGroup",
  DBSnapshot = "AWS::RDS::DBSnapshot",
  DBSubnetGroup = "AWS::RDS::DBSubnetGroup",
  DMSCertificate = "AWS::DMS::Certificate",
  DMSEventSubscription = "AWS::DMS::EventSubscription",
  DMSReplicationSubnetGroup = "AWS::DMS::ReplicationSubnetGroup",
  DataSyncLocationEFS = "AWS::DataSync::LocationEFS",
  DataSyncLocationFSxLustre = "AWS::DataSync::LocationFSxLustre",
  DataSyncLocationNFS = "AWS::DataSync::LocationNFS",
  DataSyncLocationS3 = "AWS::DataSync::LocationS3",
  DataSyncLocationSMB = "AWS::DataSync::LocationSMB",
  DataSyncTask = "AWS::DataSync::Task",
  DetectiveGraph = "AWS::Detective::Graph",
  Distribution = "AWS::CloudFront::Distribution",
  Domain = "AWS::Elasticsearch::Domain",
  ECRPublicRepository = "AWS::ECR::PublicRepository",
  ECRRepository = "AWS::ECR::Repository",
  ECSCluster = "AWS::ECS::Cluster",
  ECSService = "AWS::ECS::Service",
  ECSTaskDefinition = "AWS::ECS::TaskDefinition",
  EFSAccessPoint = "AWS::EFS::AccessPoint",
  EFSFileSystem = "AWS::EFS::FileSystem",
  EIP = "AWS::EC2::EIP",
  EKSCluster = "AWS::EKS::Cluster",
  EKSFargateProfile = "AWS::EKS::FargateProfile",
  EMRSecurityConfiguration = "AWS::EMR::SecurityConfiguration",
  EgressOnlyInternetGateway = "AWS::EC2::EgressOnlyInternetGateway",
  EncryptionConfig = "AWS::XRay::EncryptionConfig",
  Environment = "AWS::ElasticBeanstalk::Environment",
  EventSubscription = "AWS::RDS::EventSubscription",
  FileData = "AWS::SSM::FileData",
  FlowLog = "AWS::EC2::FlowLog",
  Function = "AWS::Lambda::Function",
  GlobalAcceleratorAccelerator = "AWS::GlobalAccelerator::Accelerator",
  GlobalAcceleratorEndpointGroup = "AWS::GlobalAccelerator::EndpointGroup",
  GlobalAcceleratorListener = "AWS::GlobalAccelerator::Listener",
  GlueJob = "AWS::Glue::Job",
  Group = "AWS::IAM::Group",
  GuardDutyDetector = "AWS::GuardDuty::Detector",
  GuardDutyIPSet = "AWS::GuardDuty::IPSet",
  GuardDutyThreatIntelSet = "AWS::GuardDuty::ThreatIntelSet",
  Host = "AWS::EC2::Host",
  IPSetV2 = "AWS::WAFv2::IPSet",
  Instance = "AWS::EC2::Instance",
  InternetGateway = "AWS::EC2::InternetGateway",
  Key = "AWS::KMS::Key",
  KinesisStream = "AWS::Kinesis::Stream",
  KinesisStreamConsumer = "AWS::Kinesis::StreamConsumer",
  LaunchConfiguration = "AWS::AutoScaling::LaunchConfiguration",
  LaunchTemplate = "AWS::EC2::LaunchTemplate",
  ListenerV2 = "AWS::ElasticLoadBalancingV2::Listener",
  LoadBalancer = "AWS::ElasticLoadBalancing::LoadBalancer",
  LoadBalancerV2 = "AWS::ElasticLoadBalancingV2::LoadBalancer",
  MSKCluster = "AWS::MSK::Cluster",
  ManagedInstanceInventory = "AWS::SSM::ManagedInstanceInventory",
  ManagedRuleSetV2 = "AWS::WAFv2::ManagedRuleSet",
  NatGateway = "AWS::EC2::NatGateway",
  NetworkAcl = "AWS::EC2::NetworkAcl",
  NetworkFirewallFirewall = "AWS::NetworkFirewall::Firewall",
  NetworkFirewallFirewallPolicy = "AWS::NetworkFirewall::FirewallPolicy",
  NetworkFirewallRuleGroup = "AWS::NetworkFirewall::RuleGroup",
  NetworkInsightsAccessScopeAnalysis = "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
  NetworkInterface = "AWS::EC2::NetworkInterface",
  OpenSearchDomain = "AWS::OpenSearch::Domain",
  PatchCompliance = "AWS::SSM::PatchCompliance",
  Pipeline = "AWS::CodePipeline::Pipeline",
  Policy = "AWS::IAM::Policy",
  Portfolio = "AWS::ServiceCatalog::Portfolio",
  Project = "AWS::CodeBuild::Project",
  Protection = "AWS::Shield::Protection",
  QLDBLedger = "AWS::QLDB::Ledger",
  Queue = "AWS::SQS::Queue",
  RateBasedRule = "AWS::WAF::RateBasedRule",
  RedshiftEventSubscription = "AWS::Redshift::EventSubscription",
  RegexPatternSetV2 = "AWS::WAFv2::RegexPatternSet",
  RegionalProtection = "AWS::ShieldRegional::Protection",
  RegionalRateBasedRule = "AWS::WAFRegional::RateBasedRule",
  RegionalRule = "AWS::WAFRegional::Rule",
  RegionalRuleGroup = "AWS::WAFRegional::RuleGroup",
  RegionalWebACL = "AWS::WAFRegional::WebACL",
  RegisteredHAInstance = "AWS::EC2::RegisteredHAInstance",
  ResourceCompliance = "AWS::Config::ResourceCompliance",
  RestApi = "AWS::ApiGateway::RestApi",
  Role = "AWS::IAM::Role",
  Route53HostedZone = "AWS::Route53::HostedZone",
  Route53ResolverResolverEndpoint = "AWS::Route53Resolver::ResolverEndpoint",
  Route53ResolverResolverRule = "AWS::Route53Resolver::ResolverRule",
  Route53ResolverResolverRuleAssociation = "AWS::Route53Resolver::ResolverRuleAssociation",
  RouteTable = "AWS::EC2::RouteTable",
  Rule = "AWS::WAF::Rule",
  RuleGroup = "AWS::WAF::RuleGroup",
  RuleGroupV2 = "AWS::WAFv2::RuleGroup",
  SESConfigurationSet = "AWS::SES::ConfigurationSet",
  SESContactList = "AWS::SES::ContactList",
  SageMakerCodeRepository = "AWS::SageMaker::CodeRepository",
  SageMakerModel = "AWS::SageMaker::Model",
  SageMakerNotebookInstanceLifecycleConfig = "AWS::SageMaker::NotebookInstanceLifecycleConfig",
  SageMakerWorkteam = "AWS::SageMaker::Workteam",
  ScalingPolicy = "AWS::AutoScaling::ScalingPolicy",
  ScheduledAction = "AWS::AutoScaling::ScheduledAction",
  Secret = "AWS::SecretsManager::Secret",
  SecurityGroup = "AWS::EC2::SecurityGroup",
  ServiceDiscoveryPublicDnsNamespace = "AWS::ServiceDiscovery::PublicDnsNamespace",
  ServiceDiscoveryService = "AWS::ServiceDiscovery::Service",
  Stack = "AWS::CloudFormation::Stack",
  Stage = "AWS::ApiGateway::Stage",
  StageV2 = "AWS::ApiGatewayV2::Stage",
  StepFunctionsActivity = "AWS::StepFunctions::Activity",
  StepFunctionsStateMachine = "AWS::StepFunctions::StateMachine",
  StreamingDistribution = "AWS::CloudFront::StreamingDistribution",
  Subnet = "AWS::EC2::Subnet",
  Table = "AWS::DynamoDB::Table",
  Topic = "AWS::SNS::Topic",
  Trail = "AWS::CloudTrail::Trail",
  TransitGateway = "AWS::EC2::TransitGateway",
  TransitGatewayAttachment = "AWS::EC2::TransitGatewayAttachment",
  TransitGatewayRouteTable = "AWS::EC2::TransitGatewayRouteTable",
  User = "AWS::IAM::User",
  VPC = "AWS::EC2::VPC",
  VPCEndpoint = "AWS::EC2::VPCEndpoint",
  VPCEndpointService = "AWS::EC2::VPCEndpointService",
  VPCPeeringConnection = "AWS::EC2::VPCPeeringConnection",
  VPNConnection = "AWS::EC2::VPNConnection",
  VPNGateway = "AWS::EC2::VPNGateway",
  Volume = "AWS::EC2::Volume",
  WebACL = "AWS::WAF::WebACL",
  WebACLV2 = "AWS::WAFv2::WebACL",
  WorkSpacesConnectionAlias = "AWS::WorkSpaces::ConnectionAlias",
  WorkSpacesWorkspace = "AWS::WorkSpaces::Workspace",
}
export interface AggregateResourceIdentifier {
  SourceAccountId: string | undefined;
  SourceRegion: string | undefined;
  ResourceId: string | undefined;
  ResourceType: ResourceType | string | undefined;
  ResourceName?: string;
}
export interface AggregationAuthorization {
  AggregationAuthorizationArn?: string;
  AuthorizedAccountId?: string;
  AuthorizedAwsRegion?: string;
  CreationTime?: Date;
}
export declare enum ConfigurationItemStatus {
  OK = "OK",
  ResourceDeleted = "ResourceDeleted",
  ResourceDeletedNotRecorded = "ResourceDeletedNotRecorded",
  ResourceDiscovered = "ResourceDiscovered",
  ResourceNotRecorded = "ResourceNotRecorded",
}
export interface BaseConfigurationItem {
  version?: string;
  accountId?: string;
  configurationItemCaptureTime?: Date;
  configurationItemStatus?: ConfigurationItemStatus | string;
  configurationStateId?: string;
  arn?: string;
  resourceType?: ResourceType | string;
  resourceId?: string;
  resourceName?: string;
  awsRegion?: string;
  availabilityZone?: string;
  resourceCreationTime?: Date;
  configuration?: string;
  supplementaryConfiguration?: Record<string, string>;
}
export interface BatchGetAggregateResourceConfigRequest {
  ConfigurationAggregatorName: string | undefined;
  ResourceIdentifiers: AggregateResourceIdentifier[] | undefined;
}
export interface BatchGetAggregateResourceConfigResponse {
  BaseConfigurationItems?: BaseConfigurationItem[];
  UnprocessedResourceIdentifiers?: AggregateResourceIdentifier[];
}
export declare class NoSuchConfigurationAggregatorException extends __BaseException {
  readonly name: "NoSuchConfigurationAggregatorException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchConfigurationAggregatorException,
      __BaseException
    >
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface ResourceKey {
  resourceType: ResourceType | string | undefined;
  resourceId: string | undefined;
}
export interface BatchGetResourceConfigRequest {
  resourceKeys: ResourceKey[] | undefined;
}
export interface BatchGetResourceConfigResponse {
  baseConfigurationItems?: BaseConfigurationItem[];
  unprocessedResourceKeys?: ResourceKey[];
}
export declare class NoAvailableConfigurationRecorderException extends __BaseException {
  readonly name: "NoAvailableConfigurationRecorderException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoAvailableConfigurationRecorderException,
      __BaseException
    >
  );
}
export declare enum ChronologicalOrder {
  Forward = "Forward",
  Reverse = "Reverse",
}
export interface ComplianceByConfigRule {
  ConfigRuleName?: string;
  Compliance?: Compliance;
}
export interface ComplianceByResource {
  ResourceType?: string;
  ResourceId?: string;
  Compliance?: Compliance;
}
export interface ComplianceSummaryByResourceType {
  ResourceType?: string;
  ComplianceSummary?: ComplianceSummary;
}
export declare enum DeliveryStatus {
  Failure = "Failure",
  Not_Applicable = "Not_Applicable",
  Success = "Success",
}
export interface ConfigExportDeliveryInfo {
  lastStatus?: DeliveryStatus | string;
  lastErrorCode?: string;
  lastErrorMessage?: string;
  lastAttemptTime?: Date;
  lastSuccessfulTime?: Date;
  nextDeliveryTime?: Date;
}
export declare enum ConfigRuleState {
  ACTIVE = "ACTIVE",
  DELETING = "DELETING",
  DELETING_RESULTS = "DELETING_RESULTS",
  EVALUATING = "EVALUATING",
}
export declare enum MaximumExecutionFrequency {
  One_Hour = "One_Hour",
  Six_Hours = "Six_Hours",
  Three_Hours = "Three_Hours",
  Twelve_Hours = "Twelve_Hours",
  TwentyFour_Hours = "TwentyFour_Hours",
}
export interface Scope {
  ComplianceResourceTypes?: string[];
  TagKey?: string;
  TagValue?: string;
  ComplianceResourceId?: string;
}
export interface CustomPolicyDetails {
  PolicyRuntime: string | undefined;
  PolicyText: string | undefined;
  EnableDebugLogDelivery?: boolean;
}
export declare enum Owner {
  Aws = "AWS",
  Custom_Lambda = "CUSTOM_LAMBDA",
  Custom_Policy = "CUSTOM_POLICY",
}
export declare enum EventSource {
  Aws_Config = "aws.config",
}
export declare enum MessageType {
  ConfigurationItemChangeNotification = "ConfigurationItemChangeNotification",
  ConfigurationSnapshotDeliveryCompleted = "ConfigurationSnapshotDeliveryCompleted",
  OversizedConfigurationItemChangeNotification = "OversizedConfigurationItemChangeNotification",
  ScheduledNotification = "ScheduledNotification",
}
export interface SourceDetail {
  EventSource?: EventSource | string;
  MessageType?: MessageType | string;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | string;
}
export interface Source {
  Owner: Owner | string | undefined;
  SourceIdentifier?: string;
  SourceDetails?: SourceDetail[];
  CustomPolicyDetails?: CustomPolicyDetails;
}
export interface ConfigRule {
  ConfigRuleName?: string;
  ConfigRuleArn?: string;
  ConfigRuleId?: string;
  Description?: string;
  Scope?: Scope;
  Source: Source | undefined;
  InputParameters?: string;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | string;
  ConfigRuleState?: ConfigRuleState | string;
  CreatedBy?: string;
}
export interface ConfigRuleComplianceFilters {
  ConfigRuleName?: string;
  ComplianceType?: ComplianceType | string;
  AccountId?: string;
  AwsRegion?: string;
}
export interface ConfigRuleComplianceSummaryFilters {
  AccountId?: string;
  AwsRegion?: string;
}
export declare enum ConfigRuleComplianceSummaryGroupKey {
  ACCOUNT_ID = "ACCOUNT_ID",
  AWS_REGION = "AWS_REGION",
}
export interface ConfigRuleEvaluationStatus {
  ConfigRuleName?: string;
  ConfigRuleArn?: string;
  ConfigRuleId?: string;
  LastSuccessfulInvocationTime?: Date;
  LastFailedInvocationTime?: Date;
  LastSuccessfulEvaluationTime?: Date;
  LastFailedEvaluationTime?: Date;
  FirstActivatedTime?: Date;
  LastDeactivatedTime?: Date;
  LastErrorCode?: string;
  LastErrorMessage?: string;
  FirstEvaluationStarted?: boolean;
  LastDebugLogDeliveryStatus?: string;
  LastDebugLogDeliveryStatusReason?: string;
  LastDebugLogDeliveryTime?: Date;
}
export interface ConfigSnapshotDeliveryProperties {
  deliveryFrequency?: MaximumExecutionFrequency | string;
}
export interface ConfigStreamDeliveryInfo {
  lastStatus?: DeliveryStatus | string;
  lastErrorCode?: string;
  lastErrorMessage?: string;
  lastStatusChangeTime?: Date;
}
export interface OrganizationAggregationSource {
  RoleArn: string | undefined;
  AwsRegions?: string[];
  AllAwsRegions?: boolean;
}
export interface ConfigurationAggregator {
  ConfigurationAggregatorName?: string;
  ConfigurationAggregatorArn?: string;
  AccountAggregationSources?: AccountAggregationSource[];
  OrganizationAggregationSource?: OrganizationAggregationSource;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
  CreatedBy?: string;
}
export interface Relationship {
  resourceType?: ResourceType | string;
  resourceId?: string;
  resourceName?: string;
  relationshipName?: string;
}
export interface ConfigurationItem {
  version?: string;
  accountId?: string;
  configurationItemCaptureTime?: Date;
  configurationItemStatus?: ConfigurationItemStatus | string;
  configurationStateId?: string;
  configurationItemMD5Hash?: string;
  arn?: string;
  resourceType?: ResourceType | string;
  resourceId?: string;
  resourceName?: string;
  awsRegion?: string;
  availabilityZone?: string;
  resourceCreationTime?: Date;
  tags?: Record<string, string>;
  relatedEvents?: string[];
  relationships?: Relationship[];
  configuration?: string;
  supplementaryConfiguration?: Record<string, string>;
}
export interface RecordingGroup {
  allSupported?: boolean;
  includeGlobalResourceTypes?: boolean;
  resourceTypes?: (ResourceType | string)[];
}
export interface ConfigurationRecorder {
  name?: string;
  roleARN?: string;
  recordingGroup?: RecordingGroup;
}
export declare enum RecorderStatus {
  Failure = "Failure",
  Pending = "Pending",
  Success = "Success",
}
export interface ConfigurationRecorderStatus {
  name?: string;
  lastStartTime?: Date;
  lastStopTime?: Date;
  recording?: boolean;
  lastStatus?: RecorderStatus | string;
  lastErrorCode?: string;
  lastErrorMessage?: string;
  lastStatusChangeTime?: Date;
}
export interface ConformancePackComplianceFilters {
  ConfigRuleNames?: string[];
  ComplianceType?: ConformancePackComplianceType | string;
}
export interface ConformancePackComplianceScore {
  Score?: string;
  ConformancePackName?: string;
  LastUpdatedTime?: Date;
}
export interface ConformancePackComplianceScoresFilters {
  ConformancePackNames: string[] | undefined;
}
export interface ConformancePackComplianceSummary {
  ConformancePackName: string | undefined;
  ConformancePackComplianceStatus:
    | ConformancePackComplianceType
    | string
    | undefined;
}
export interface ConformancePackInputParameter {
  ParameterName: string | undefined;
  ParameterValue: string | undefined;
}
export interface TemplateSSMDocumentDetails {
  DocumentName: string | undefined;
  DocumentVersion?: string;
}
export interface ConformancePackDetail {
  ConformancePackName: string | undefined;
  ConformancePackArn: string | undefined;
  ConformancePackId: string | undefined;
  DeliveryS3Bucket?: string;
  DeliveryS3KeyPrefix?: string;
  ConformancePackInputParameters?: ConformancePackInputParameter[];
  LastUpdateRequestedTime?: Date;
  CreatedBy?: string;
  TemplateSSMDocumentDetails?: TemplateSSMDocumentDetails;
}
export interface ConformancePackEvaluationFilters {
  ConfigRuleNames?: string[];
  ComplianceType?: ConformancePackComplianceType | string;
  ResourceType?: string;
  ResourceIds?: string[];
}
export interface ConformancePackEvaluationResult {
  ComplianceType: ConformancePackComplianceType | string | undefined;
  EvaluationResultIdentifier: EvaluationResultIdentifier | undefined;
  ConfigRuleInvokedTime: Date | undefined;
  ResultRecordedTime: Date | undefined;
  Annotation?: string;
}
export interface ConformancePackRuleCompliance {
  ConfigRuleName?: string;
  ComplianceType?: ConformancePackComplianceType | string;
  Controls?: string[];
}
export declare enum ConformancePackState {
  CREATE_COMPLETE = "CREATE_COMPLETE",
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  DELETE_FAILED = "DELETE_FAILED",
  DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
}
export interface ConformancePackStatusDetail {
  ConformancePackName: string | undefined;
  ConformancePackId: string | undefined;
  ConformancePackArn: string | undefined;
  ConformancePackState: ConformancePackState | string | undefined;
  StackArn: string | undefined;
  ConformancePackStatusReason?: string;
  LastUpdateRequestedTime: Date | undefined;
  LastUpdateCompletedTime?: Date;
}
export declare class ConformancePackTemplateValidationException extends __BaseException {
  readonly name: "ConformancePackTemplateValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ConformancePackTemplateValidationException,
      __BaseException
    >
  );
}
export interface DeleteAggregationAuthorizationRequest {
  AuthorizedAccountId: string | undefined;
  AuthorizedAwsRegion: string | undefined;
}
export declare class InvalidParameterValueException extends __BaseException {
  readonly name: "InvalidParameterValueException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidParameterValueException, __BaseException>
  );
}
export interface DeleteConfigRuleRequest {
  ConfigRuleName: string | undefined;
}
export declare class NoSuchConfigRuleException extends __BaseException {
  readonly name: "NoSuchConfigRuleException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchConfigRuleException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export interface DeleteConfigurationAggregatorRequest {
  ConfigurationAggregatorName: string | undefined;
}
export interface DeleteConfigurationRecorderRequest {
  ConfigurationRecorderName: string | undefined;
}
export declare class NoSuchConfigurationRecorderException extends __BaseException {
  readonly name: "NoSuchConfigurationRecorderException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchConfigurationRecorderException,
      __BaseException
    >
  );
}
export interface DeleteConformancePackRequest {
  ConformancePackName: string | undefined;
}
export declare class NoSuchConformancePackException extends __BaseException {
  readonly name: "NoSuchConformancePackException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchConformancePackException, __BaseException>
  );
}
export interface DeleteDeliveryChannelRequest {
  DeliveryChannelName: string | undefined;
}
export declare class LastDeliveryChannelDeleteFailedException extends __BaseException {
  readonly name: "LastDeliveryChannelDeleteFailedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      LastDeliveryChannelDeleteFailedException,
      __BaseException
    >
  );
}
export declare class NoSuchDeliveryChannelException extends __BaseException {
  readonly name: "NoSuchDeliveryChannelException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchDeliveryChannelException, __BaseException>
  );
}
export interface DeleteEvaluationResultsRequest {
  ConfigRuleName: string | undefined;
}
export interface DeleteEvaluationResultsResponse {}
export interface DeleteOrganizationConfigRuleRequest {
  OrganizationConfigRuleName: string | undefined;
}
export declare class NoSuchOrganizationConfigRuleException extends __BaseException {
  readonly name: "NoSuchOrganizationConfigRuleException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchOrganizationConfigRuleException,
      __BaseException
    >
  );
}
export declare class OrganizationAccessDeniedException extends __BaseException {
  readonly name: "OrganizationAccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      OrganizationAccessDeniedException,
      __BaseException
    >
  );
}
export interface DeleteOrganizationConformancePackRequest {
  OrganizationConformancePackName: string | undefined;
}
export declare class NoSuchOrganizationConformancePackException extends __BaseException {
  readonly name: "NoSuchOrganizationConformancePackException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchOrganizationConformancePackException,
      __BaseException
    >
  );
}
export interface DeletePendingAggregationRequestRequest {
  RequesterAccountId: string | undefined;
  RequesterAwsRegion: string | undefined;
}
export interface DeleteRemediationConfigurationRequest {
  ConfigRuleName: string | undefined;
  ResourceType?: string;
}
export interface DeleteRemediationConfigurationResponse {}
export declare class InsufficientPermissionsException extends __BaseException {
  readonly name: "InsufficientPermissionsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientPermissionsException,
      __BaseException
    >
  );
}
export declare class NoSuchRemediationConfigurationException extends __BaseException {
  readonly name: "NoSuchRemediationConfigurationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchRemediationConfigurationException,
      __BaseException
    >
  );
}
export declare class RemediationInProgressException extends __BaseException {
  readonly name: "RemediationInProgressException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<RemediationInProgressException, __BaseException>
  );
}
export interface RemediationExceptionResourceKey {
  ResourceType?: string;
  ResourceId?: string;
}
export interface DeleteRemediationExceptionsRequest {
  ConfigRuleName: string | undefined;
  ResourceKeys: RemediationExceptionResourceKey[] | undefined;
}
export interface FailedDeleteRemediationExceptionsBatch {
  FailureMessage?: string;
  FailedItems?: RemediationExceptionResourceKey[];
}
export interface DeleteRemediationExceptionsResponse {
  FailedBatches?: FailedDeleteRemediationExceptionsBatch[];
}
export declare class NoSuchRemediationExceptionException extends __BaseException {
  readonly name: "NoSuchRemediationExceptionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchRemediationExceptionException,
      __BaseException
    >
  );
}
export interface DeleteResourceConfigRequest {
  ResourceType: string | undefined;
  ResourceId: string | undefined;
}
export declare class NoRunningConfigurationRecorderException extends __BaseException {
  readonly name: "NoRunningConfigurationRecorderException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoRunningConfigurationRecorderException,
      __BaseException
    >
  );
}
export interface DeleteRetentionConfigurationRequest {
  RetentionConfigurationName: string | undefined;
}
export declare class NoSuchRetentionConfigurationException extends __BaseException {
  readonly name: "NoSuchRetentionConfigurationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchRetentionConfigurationException,
      __BaseException
    >
  );
}
export interface DeleteStoredQueryRequest {
  QueryName: string | undefined;
}
export interface DeleteStoredQueryResponse {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DeliverConfigSnapshotRequest {
  deliveryChannelName: string | undefined;
}
export interface DeliverConfigSnapshotResponse {
  configSnapshotId?: string;
}
export interface DeliveryChannel {
  name?: string;
  s3BucketName?: string;
  s3KeyPrefix?: string;
  s3KmsKeyArn?: string;
  snsTopicARN?: string;
  configSnapshotDeliveryProperties?: ConfigSnapshotDeliveryProperties;
}
export interface DeliveryChannelStatus {
  name?: string;
  configSnapshotDeliveryInfo?: ConfigExportDeliveryInfo;
  configHistoryDeliveryInfo?: ConfigExportDeliveryInfo;
  configStreamDeliveryInfo?: ConfigStreamDeliveryInfo;
}
export interface DescribeAggregateComplianceByConfigRulesRequest {
  ConfigurationAggregatorName: string | undefined;
  Filters?: ConfigRuleComplianceFilters;
  Limit?: number;
  NextToken?: string;
}
export interface DescribeAggregateComplianceByConfigRulesResponse {
  AggregateComplianceByConfigRules?: AggregateComplianceByConfigRule[];
  NextToken?: string;
}
export declare class InvalidLimitException extends __BaseException {
  readonly name: "InvalidLimitException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidLimitException, __BaseException>
  );
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface DescribeAggregateComplianceByConformancePacksRequest {
  ConfigurationAggregatorName: string | undefined;
  Filters?: AggregateConformancePackComplianceFilters;
  Limit?: number;
  NextToken?: string;
}
export interface DescribeAggregateComplianceByConformancePacksResponse {
  AggregateComplianceByConformancePacks?: AggregateComplianceByConformancePack[];
  NextToken?: string;
}
export interface DescribeAggregationAuthorizationsRequest {
  Limit?: number;
  NextToken?: string;
}
export interface DescribeAggregationAuthorizationsResponse {
  AggregationAuthorizations?: AggregationAuthorization[];
  NextToken?: string;
}
export interface DescribeComplianceByConfigRuleRequest {
  ConfigRuleNames?: string[];
  ComplianceTypes?: (ComplianceType | string)[];
  NextToken?: string;
}
export interface DescribeComplianceByConfigRuleResponse {
  ComplianceByConfigRules?: ComplianceByConfigRule[];
  NextToken?: string;
}
export interface DescribeComplianceByResourceRequest {
  ResourceType?: string;
  ResourceId?: string;
  ComplianceTypes?: (ComplianceType | string)[];
  Limit?: number;
  NextToken?: string;
}
export interface DescribeComplianceByResourceResponse {
  ComplianceByResources?: ComplianceByResource[];
  NextToken?: string;
}
export interface DescribeConfigRuleEvaluationStatusRequest {
  ConfigRuleNames?: string[];
  NextToken?: string;
  Limit?: number;
}
export interface DescribeConfigRuleEvaluationStatusResponse {
  ConfigRulesEvaluationStatus?: ConfigRuleEvaluationStatus[];
  NextToken?: string;
}
export interface DescribeConfigRulesRequest {
  ConfigRuleNames?: string[];
  NextToken?: string;
}
export interface DescribeConfigRulesResponse {
  ConfigRules?: ConfigRule[];
  NextToken?: string;
}
export interface DescribeConfigurationAggregatorsRequest {
  ConfigurationAggregatorNames?: string[];
  NextToken?: string;
  Limit?: number;
}
export interface DescribeConfigurationAggregatorsResponse {
  ConfigurationAggregators?: ConfigurationAggregator[];
  NextToken?: string;
}
export interface DescribeConfigurationAggregatorSourcesStatusRequest {
  ConfigurationAggregatorName: string | undefined;
  UpdateStatus?: (AggregatedSourceStatusType | string)[];
  NextToken?: string;
  Limit?: number;
}
export interface DescribeConfigurationAggregatorSourcesStatusResponse {
  AggregatedSourceStatusList?: AggregatedSourceStatus[];
  NextToken?: string;
}
export interface DescribeConfigurationRecordersRequest {
  ConfigurationRecorderNames?: string[];
}
export interface DescribeConfigurationRecordersResponse {
  ConfigurationRecorders?: ConfigurationRecorder[];
}
export interface DescribeConfigurationRecorderStatusRequest {
  ConfigurationRecorderNames?: string[];
}
export interface DescribeConfigurationRecorderStatusResponse {
  ConfigurationRecordersStatus?: ConfigurationRecorderStatus[];
}
export interface DescribeConformancePackComplianceRequest {
  ConformancePackName: string | undefined;
  Filters?: ConformancePackComplianceFilters;
  Limit?: number;
  NextToken?: string;
}
export interface DescribeConformancePackComplianceResponse {
  ConformancePackName: string | undefined;
  ConformancePackRuleComplianceList:
    | ConformancePackRuleCompliance[]
    | undefined;
  NextToken?: string;
}
export declare class NoSuchConfigRuleInConformancePackException extends __BaseException {
  readonly name: "NoSuchConfigRuleInConformancePackException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoSuchConfigRuleInConformancePackException,
      __BaseException
    >
  );
}
export interface DescribeConformancePacksRequest {
  ConformancePackNames?: string[];
  Limit?: number;
  NextToken?: string;
}
export interface DescribeConformancePacksResponse {
  ConformancePackDetails?: ConformancePackDetail[];
  NextToken?: string;
}
export interface DescribeConformancePackStatusRequest {
  ConformancePackNames?: string[];
  Limit?: number;
  NextToken?: string;
}
export interface DescribeConformancePackStatusResponse {
  ConformancePackStatusDetails?: ConformancePackStatusDetail[];
  NextToken?: string;
}
export interface DescribeDeliveryChannelsRequest {
  DeliveryChannelNames?: string[];
}
export interface DescribeDeliveryChannelsResponse {
  DeliveryChannels?: DeliveryChannel[];
}
export interface DescribeDeliveryChannelStatusRequest {
  DeliveryChannelNames?: string[];
}
export interface DescribeDeliveryChannelStatusResponse {
  DeliveryChannelsStatus?: DeliveryChannelStatus[];
}
export interface DescribeOrganizationConfigRulesRequest {
  OrganizationConfigRuleNames?: string[];
  Limit?: number;
  NextToken?: string;
}
export declare enum OrganizationConfigRuleTriggerTypeNoSN {
  CONFIGURATION_ITEM_CHANGE_NOTIFICATION = "ConfigurationItemChangeNotification",
  OVERSIZED_CONFIGURATION_ITEM_CHANGE_NOTIFCATION = "OversizedConfigurationItemChangeNotification",
}
export interface OrganizationCustomPolicyRuleMetadataNoPolicy {
  Description?: string;
  OrganizationConfigRuleTriggerTypes?: (
    | OrganizationConfigRuleTriggerTypeNoSN
    | string
  )[];
  InputParameters?: string;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | string;
  ResourceTypesScope?: string[];
  ResourceIdScope?: string;
  TagKeyScope?: string;
  TagValueScope?: string;
  PolicyRuntime?: string;
  DebugLogDeliveryAccounts?: string[];
}
export declare enum OrganizationConfigRuleTriggerType {
  CONFIGURATION_ITEM_CHANGE_NOTIFICATION = "ConfigurationItemChangeNotification",
  OVERSIZED_CONFIGURATION_ITEM_CHANGE_NOTIFCATION = "OversizedConfigurationItemChangeNotification",
  SCHEDULED_NOTIFICATION = "ScheduledNotification",
}
export interface OrganizationCustomRuleMetadata {
  Description?: string;
  LambdaFunctionArn: string | undefined;
  OrganizationConfigRuleTriggerTypes:
    | (OrganizationConfigRuleTriggerType | string)[]
    | undefined;
  InputParameters?: string;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | string;
  ResourceTypesScope?: string[];
  ResourceIdScope?: string;
  TagKeyScope?: string;
  TagValueScope?: string;
}
export interface OrganizationManagedRuleMetadata {
  Description?: string;
  RuleIdentifier: string | undefined;
  InputParameters?: string;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | string;
  ResourceTypesScope?: string[];
  ResourceIdScope?: string;
  TagKeyScope?: string;
  TagValueScope?: string;
}
export interface OrganizationConfigRule {
  OrganizationConfigRuleName: string | undefined;
  OrganizationConfigRuleArn: string | undefined;
  OrganizationManagedRuleMetadata?: OrganizationManagedRuleMetadata;
  OrganizationCustomRuleMetadata?: OrganizationCustomRuleMetadata;
  ExcludedAccounts?: string[];
  LastUpdateTime?: Date;
  OrganizationCustomPolicyRuleMetadata?: OrganizationCustomPolicyRuleMetadataNoPolicy;
}
export interface DescribeOrganizationConfigRulesResponse {
  OrganizationConfigRules?: OrganizationConfigRule[];
  NextToken?: string;
}
export interface DescribeOrganizationConfigRuleStatusesRequest {
  OrganizationConfigRuleNames?: string[];
  Limit?: number;
  NextToken?: string;
}
export declare enum OrganizationRuleStatus {
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  CREATE_SUCCESSFUL = "CREATE_SUCCESSFUL",
  DELETE_FAILED = "DELETE_FAILED",
  DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
  DELETE_SUCCESSFUL = "DELETE_SUCCESSFUL",
  UPDATE_FAILED = "UPDATE_FAILED",
  UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS",
  UPDATE_SUCCESSFUL = "UPDATE_SUCCESSFUL",
}
export interface OrganizationConfigRuleStatus {
  OrganizationConfigRuleName: string | undefined;
  OrganizationRuleStatus: OrganizationRuleStatus | string | undefined;
  ErrorCode?: string;
  ErrorMessage?: string;
  LastUpdateTime?: Date;
}
export interface DescribeOrganizationConfigRuleStatusesResponse {
  OrganizationConfigRuleStatuses?: OrganizationConfigRuleStatus[];
  NextToken?: string;
}
export interface DescribeOrganizationConformancePacksRequest {
  OrganizationConformancePackNames?: string[];
  Limit?: number;
  NextToken?: string;
}
export interface OrganizationConformancePack {
  OrganizationConformancePackName: string | undefined;
  OrganizationConformancePackArn: string | undefined;
  DeliveryS3Bucket?: string;
  DeliveryS3KeyPrefix?: string;
  ConformancePackInputParameters?: ConformancePackInputParameter[];
  ExcludedAccounts?: string[];
  LastUpdateTime: Date | undefined;
}
export interface DescribeOrganizationConformancePacksResponse {
  OrganizationConformancePacks?: OrganizationConformancePack[];
  NextToken?: string;
}
export interface DescribeOrganizationConformancePackStatusesRequest {
  OrganizationConformancePackNames?: string[];
  Limit?: number;
  NextToken?: string;
}
export declare enum OrganizationResourceStatus {
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  CREATE_SUCCESSFUL = "CREATE_SUCCESSFUL",
  DELETE_FAILED = "DELETE_FAILED",
  DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
  DELETE_SUCCESSFUL = "DELETE_SUCCESSFUL",
  UPDATE_FAILED = "UPDATE_FAILED",
  UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS",
  UPDATE_SUCCESSFUL = "UPDATE_SUCCESSFUL",
}
export interface OrganizationConformancePackStatus {
  OrganizationConformancePackName: string | undefined;
  Status: OrganizationResourceStatus | string | undefined;
  ErrorCode?: string;
  ErrorMessage?: string;
  LastUpdateTime?: Date;
}
export interface DescribeOrganizationConformancePackStatusesResponse {
  OrganizationConformancePackStatuses?: OrganizationConformancePackStatus[];
  NextToken?: string;
}
export interface DescribePendingAggregationRequestsRequest {
  Limit?: number;
  NextToken?: string;
}
export interface PendingAggregationRequest {
  RequesterAccountId?: string;
  RequesterAwsRegion?: string;
}
export interface DescribePendingAggregationRequestsResponse {
  PendingAggregationRequests?: PendingAggregationRequest[];
  NextToken?: string;
}
export interface DescribeRemediationConfigurationsRequest {
  ConfigRuleNames: string[] | undefined;
}
export interface SsmControls {
  ConcurrentExecutionRatePercentage?: number;
  ErrorPercentage?: number;
}
export interface ExecutionControls {
  SsmControls?: SsmControls;
}
export declare enum ResourceValueType {
  RESOURCE_ID = "RESOURCE_ID",
}
export interface ResourceValue {
  Value: ResourceValueType | string | undefined;
}
export interface StaticValue {
  Values: string[] | undefined;
}
export interface RemediationParameterValue {
  ResourceValue?: ResourceValue;
  StaticValue?: StaticValue;
}
export declare enum RemediationTargetType {
  SSM_DOCUMENT = "SSM_DOCUMENT",
}
export interface RemediationConfiguration {
  ConfigRuleName: string | undefined;
  TargetType: RemediationTargetType | string | undefined;
  TargetId: string | undefined;
  TargetVersion?: string;
  Parameters?: Record<string, RemediationParameterValue>;
  ResourceType?: string;
  Automatic?: boolean;
  ExecutionControls?: ExecutionControls;
  MaximumAutomaticAttempts?: number;
  RetryAttemptSeconds?: number;
  Arn?: string;
  CreatedByService?: string;
}
export interface DescribeRemediationConfigurationsResponse {
  RemediationConfigurations?: RemediationConfiguration[];
}
export interface DescribeRemediationExceptionsRequest {
  ConfigRuleName: string | undefined;
  ResourceKeys?: RemediationExceptionResourceKey[];
  Limit?: number;
  NextToken?: string;
}
export interface RemediationException {
  ConfigRuleName: string | undefined;
  ResourceType: string | undefined;
  ResourceId: string | undefined;
  Message?: string;
  ExpirationTime?: Date;
}
export interface DescribeRemediationExceptionsResponse {
  RemediationExceptions?: RemediationException[];
  NextToken?: string;
}
export interface DescribeRemediationExecutionStatusRequest {
  ConfigRuleName: string | undefined;
  ResourceKeys?: ResourceKey[];
  Limit?: number;
  NextToken?: string;
}
export declare enum RemediationExecutionState {
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
  QUEUED = "QUEUED",
  SUCCEEDED = "SUCCEEDED",
}
export declare enum RemediationExecutionStepState {
  FAILED = "FAILED",
  PENDING = "PENDING",
  SUCCEEDED = "SUCCEEDED",
}
export interface RemediationExecutionStep {
  Name?: string;
  State?: RemediationExecutionStepState | string;
  ErrorMessage?: string;
  StartTime?: Date;
  StopTime?: Date;
}
export interface RemediationExecutionStatus {
  ResourceKey?: ResourceKey;
  State?: RemediationExecutionState | string;
  StepDetails?: RemediationExecutionStep[];
  InvocationTime?: Date;
  LastUpdatedTime?: Date;
}
export interface DescribeRemediationExecutionStatusResponse {
  RemediationExecutionStatuses?: RemediationExecutionStatus[];
  NextToken?: string;
}
export interface DescribeRetentionConfigurationsRequest {
  RetentionConfigurationNames?: string[];
  NextToken?: string;
}
export interface RetentionConfiguration {
  Name: string | undefined;
  RetentionPeriodInDays: number | undefined;
}
export interface DescribeRetentionConfigurationsResponse {
  RetentionConfigurations?: RetentionConfiguration[];
  NextToken?: string;
}
export interface Evaluation {
  ComplianceResourceType: string | undefined;
  ComplianceResourceId: string | undefined;
  ComplianceType: ComplianceType | string | undefined;
  Annotation?: string;
  OrderingTimestamp: Date | undefined;
}
export interface EvaluationResult {
  EvaluationResultIdentifier?: EvaluationResultIdentifier;
  ComplianceType?: ComplianceType | string;
  ResultRecordedTime?: Date;
  ConfigRuleInvokedTime?: Date;
  Annotation?: string;
  ResultToken?: string;
}
export interface ExternalEvaluation {
  ComplianceResourceType: string | undefined;
  ComplianceResourceId: string | undefined;
  ComplianceType: ComplianceType | string | undefined;
  Annotation?: string;
  OrderingTimestamp: Date | undefined;
}
export interface FailedRemediationBatch {
  FailureMessage?: string;
  FailedItems?: RemediationConfiguration[];
}
export interface FailedRemediationExceptionBatch {
  FailureMessage?: string;
  FailedItems?: RemediationException[];
}
export interface FieldInfo {
  Name?: string;
}
export interface GetAggregateComplianceDetailsByConfigRuleRequest {
  ConfigurationAggregatorName: string | undefined;
  ConfigRuleName: string | undefined;
  AccountId: string | undefined;
  AwsRegion: string | undefined;
  ComplianceType?: ComplianceType | string;
  Limit?: number;
  NextToken?: string;
}
export interface GetAggregateComplianceDetailsByConfigRuleResponse {
  AggregateEvaluationResults?: AggregateEvaluationResult[];
  NextToken?: string;
}
export interface GetAggregateConfigRuleComplianceSummaryRequest {
  ConfigurationAggregatorName: string | undefined;
  Filters?: ConfigRuleComplianceSummaryFilters;
  GroupByKey?: ConfigRuleComplianceSummaryGroupKey | string;
  Limit?: number;
  NextToken?: string;
}
export interface GetAggregateConfigRuleComplianceSummaryResponse {
  GroupByKey?: string;
  AggregateComplianceCounts?: AggregateComplianceCount[];
  NextToken?: string;
}
export interface GetAggregateConformancePackComplianceSummaryRequest {
  ConfigurationAggregatorName: string | undefined;
  Filters?: AggregateConformancePackComplianceSummaryFilters;
  GroupByKey?: AggregateConformancePackComplianceSummaryGroupKey | string;
  Limit?: number;
  NextToken?: string;
}
export interface GetAggregateConformancePackComplianceSummaryResponse {
  AggregateConformancePackComplianceSummaries?: AggregateConformancePackComplianceSummary[];
  GroupByKey?: string;
  NextToken?: string;
}
export interface ResourceCountFilters {
  ResourceType?: ResourceType | string;
  AccountId?: string;
  Region?: string;
}
export declare enum ResourceCountGroupKey {
  ACCOUNT_ID = "ACCOUNT_ID",
  AWS_REGION = "AWS_REGION",
  RESOURCE_TYPE = "RESOURCE_TYPE",
}
export interface GetAggregateDiscoveredResourceCountsRequest {
  ConfigurationAggregatorName: string | undefined;
  Filters?: ResourceCountFilters;
  GroupByKey?: ResourceCountGroupKey | string;
  Limit?: number;
  NextToken?: string;
}
export interface GroupedResourceCount {
  GroupName: string | undefined;
  ResourceCount: number | undefined;
}
export interface GetAggregateDiscoveredResourceCountsResponse {
  TotalDiscoveredResources: number | undefined;
  GroupByKey?: string;
  GroupedResourceCounts?: GroupedResourceCount[];
  NextToken?: string;
}
export interface GetAggregateResourceConfigRequest {
  ConfigurationAggregatorName: string | undefined;
  ResourceIdentifier: AggregateResourceIdentifier | undefined;
}
export interface GetAggregateResourceConfigResponse {
  ConfigurationItem?: ConfigurationItem;
}
export declare class OversizedConfigurationItemException extends __BaseException {
  readonly name: "OversizedConfigurationItemException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      OversizedConfigurationItemException,
      __BaseException
    >
  );
}
export declare class ResourceNotDiscoveredException extends __BaseException {
  readonly name: "ResourceNotDiscoveredException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotDiscoveredException, __BaseException>
  );
}
export interface GetComplianceDetailsByConfigRuleRequest {
  ConfigRuleName: string | undefined;
  ComplianceTypes?: (ComplianceType | string)[];
  Limit?: number;
  NextToken?: string;
}
export interface GetComplianceDetailsByConfigRuleResponse {
  EvaluationResults?: EvaluationResult[];
  NextToken?: string;
}
export interface GetComplianceDetailsByResourceRequest {
  ResourceType: string | undefined;
  ResourceId: string | undefined;
  ComplianceTypes?: (ComplianceType | string)[];
  NextToken?: string;
}
export interface GetComplianceDetailsByResourceResponse {
  EvaluationResults?: EvaluationResult[];
  NextToken?: string;
}
export interface GetComplianceSummaryByConfigRuleResponse {
  ComplianceSummary?: ComplianceSummary;
}
export interface GetComplianceSummaryByResourceTypeRequest {
  ResourceTypes?: string[];
}
export interface GetComplianceSummaryByResourceTypeResponse {
  ComplianceSummariesByResourceType?: ComplianceSummaryByResourceType[];
}
export interface GetConformancePackComplianceDetailsRequest {
  ConformancePackName: string | undefined;
  Filters?: ConformancePackEvaluationFilters;
  Limit?: number;
  NextToken?: string;
}
export interface GetConformancePackComplianceDetailsResponse {
  ConformancePackName: string | undefined;
  ConformancePackRuleEvaluationResults?: ConformancePackEvaluationResult[];
  NextToken?: string;
}
export interface GetConformancePackComplianceSummaryRequest {
  ConformancePackNames: string[] | undefined;
  Limit?: number;
  NextToken?: string;
}
export interface GetConformancePackComplianceSummaryResponse {
  ConformancePackComplianceSummaryList?: ConformancePackComplianceSummary[];
  NextToken?: string;
}
export interface GetCustomRulePolicyRequest {
  ConfigRuleName?: string;
}
export interface GetCustomRulePolicyResponse {
  PolicyText?: string;
}
export interface GetDiscoveredResourceCountsRequest {
  resourceTypes?: string[];
  limit?: number;
  nextToken?: string;
}
export interface ResourceCount {
  resourceType?: ResourceType | string;
  count?: number;
}
export interface GetDiscoveredResourceCountsResponse {
  totalDiscoveredResources?: number;
  resourceCounts?: ResourceCount[];
  nextToken?: string;
}
export declare enum MemberAccountRuleStatus {
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  CREATE_SUCCESSFUL = "CREATE_SUCCESSFUL",
  DELETE_FAILED = "DELETE_FAILED",
  DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
  DELETE_SUCCESSFUL = "DELETE_SUCCESSFUL",
  UPDATE_FAILED = "UPDATE_FAILED",
  UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS",
  UPDATE_SUCCESSFUL = "UPDATE_SUCCESSFUL",
}
export interface StatusDetailFilters {
  AccountId?: string;
  MemberAccountRuleStatus?: MemberAccountRuleStatus | string;
}
export interface GetOrganizationConfigRuleDetailedStatusRequest {
  OrganizationConfigRuleName: string | undefined;
  Filters?: StatusDetailFilters;
  Limit?: number;
  NextToken?: string;
}
export interface MemberAccountStatus {
  AccountId: string | undefined;
  ConfigRuleName: string | undefined;
  MemberAccountRuleStatus: MemberAccountRuleStatus | string | undefined;
  ErrorCode?: string;
  ErrorMessage?: string;
  LastUpdateTime?: Date;
}
export interface GetOrganizationConfigRuleDetailedStatusResponse {
  OrganizationConfigRuleDetailedStatus?: MemberAccountStatus[];
  NextToken?: string;
}
export declare enum OrganizationResourceDetailedStatus {
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  CREATE_SUCCESSFUL = "CREATE_SUCCESSFUL",
  DELETE_FAILED = "DELETE_FAILED",
  DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS",
  DELETE_SUCCESSFUL = "DELETE_SUCCESSFUL",
  UPDATE_FAILED = "UPDATE_FAILED",
  UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS",
  UPDATE_SUCCESSFUL = "UPDATE_SUCCESSFUL",
}
export interface OrganizationResourceDetailedStatusFilters {
  AccountId?: string;
  Status?: OrganizationResourceDetailedStatus | string;
}
export interface GetOrganizationConformancePackDetailedStatusRequest {
  OrganizationConformancePackName: string | undefined;
  Filters?: OrganizationResourceDetailedStatusFilters;
  Limit?: number;
  NextToken?: string;
}
export interface OrganizationConformancePackDetailedStatus {
  AccountId: string | undefined;
  ConformancePackName: string | undefined;
  Status: OrganizationResourceDetailedStatus | string | undefined;
  ErrorCode?: string;
  ErrorMessage?: string;
  LastUpdateTime?: Date;
}
export interface GetOrganizationConformancePackDetailedStatusResponse {
  OrganizationConformancePackDetailedStatuses?: OrganizationConformancePackDetailedStatus[];
  NextToken?: string;
}
export interface GetOrganizationCustomRulePolicyRequest {
  OrganizationConfigRuleName: string | undefined;
}
export interface GetOrganizationCustomRulePolicyResponse {
  PolicyText?: string;
}
export interface GetResourceConfigHistoryRequest {
  resourceType: ResourceType | string | undefined;
  resourceId: string | undefined;
  laterTime?: Date;
  earlierTime?: Date;
  chronologicalOrder?: ChronologicalOrder | string;
  limit?: number;
  nextToken?: string;
}
export interface GetResourceConfigHistoryResponse {
  configurationItems?: ConfigurationItem[];
  nextToken?: string;
}
export declare class InvalidTimeRangeException extends __BaseException {
  readonly name: "InvalidTimeRangeException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidTimeRangeException, __BaseException>
  );
}
export interface GetStoredQueryRequest {
  QueryName: string | undefined;
}
export interface StoredQuery {
  QueryId?: string;
  QueryArn?: string;
  QueryName: string | undefined;
  Description?: string;
  Expression?: string;
}
export interface GetStoredQueryResponse {
  StoredQuery?: StoredQuery;
}
export declare class InsufficientDeliveryPolicyException extends __BaseException {
  readonly name: "InsufficientDeliveryPolicyException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientDeliveryPolicyException,
      __BaseException
    >
  );
}
export declare class InvalidConfigurationRecorderNameException extends __BaseException {
  readonly name: "InvalidConfigurationRecorderNameException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidConfigurationRecorderNameException,
      __BaseException
    >
  );
}
export declare class InvalidDeliveryChannelNameException extends __BaseException {
  readonly name: "InvalidDeliveryChannelNameException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidDeliveryChannelNameException,
      __BaseException
    >
  );
}
export declare class InvalidExpressionException extends __BaseException {
  readonly name: "InvalidExpressionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidExpressionException, __BaseException>
  );
}
export declare class InvalidRecordingGroupException extends __BaseException {
  readonly name: "InvalidRecordingGroupException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRecordingGroupException, __BaseException>
  );
}
export declare class InvalidResultTokenException extends __BaseException {
  readonly name: "InvalidResultTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidResultTokenException, __BaseException>
  );
}
export declare class InvalidRoleException extends __BaseException {
  readonly name: "InvalidRoleException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRoleException, __BaseException>
  );
}
export declare class InvalidS3KeyPrefixException extends __BaseException {
  readonly name: "InvalidS3KeyPrefixException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidS3KeyPrefixException, __BaseException>
  );
}
export declare class InvalidS3KmsKeyArnException extends __BaseException {
  readonly name: "InvalidS3KmsKeyArnException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidS3KmsKeyArnException, __BaseException>
  );
}
export declare class InvalidSNSTopicARNException extends __BaseException {
  readonly name: "InvalidSNSTopicARNException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidSNSTopicARNException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface ResourceFilters {
  AccountId?: string;
  ResourceId?: string;
  ResourceName?: string;
  Region?: string;
}
export interface ListAggregateDiscoveredResourcesRequest {
  ConfigurationAggregatorName: string | undefined;
  ResourceType: ResourceType | string | undefined;
  Filters?: ResourceFilters;
  Limit?: number;
  NextToken?: string;
}
export interface ListAggregateDiscoveredResourcesResponse {
  ResourceIdentifiers?: AggregateResourceIdentifier[];
  NextToken?: string;
}
export declare enum SortBy {
  SCORE = "SCORE",
}
export declare enum SortOrder {
  ASCENDING = "ASCENDING",
  DESCENDING = "DESCENDING",
}
export interface ListConformancePackComplianceScoresRequest {
  Filters?: ConformancePackComplianceScoresFilters;
  SortOrder?: SortOrder | string;
  SortBy?: SortBy | string;
  Limit?: number;
  NextToken?: string;
}
export interface ListConformancePackComplianceScoresResponse {
  NextToken?: string;
  ConformancePackComplianceScores: ConformancePackComplianceScore[] | undefined;
}
export interface ListDiscoveredResourcesRequest {
  resourceType: ResourceType | string | undefined;
  resourceIds?: string[];
  resourceName?: string;
  limit?: number;
  includeDeletedResources?: boolean;
  nextToken?: string;
}
export interface ResourceIdentifier {
  resourceType?: ResourceType | string;
  resourceId?: string;
  resourceName?: string;
  resourceDeletionTime?: Date;
}
export interface ListDiscoveredResourcesResponse {
  resourceIdentifiers?: ResourceIdentifier[];
  nextToken?: string;
}
export interface ListStoredQueriesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface StoredQueryMetadata {
  QueryId: string | undefined;
  QueryArn: string | undefined;
  QueryName: string | undefined;
  Description?: string;
}
export interface ListStoredQueriesResponse {
  StoredQueryMetadata?: StoredQueryMetadata[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
  Limit?: number;
  NextToken?: string;
}
export interface Tag {
  Key?: string;
  Value?: string;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
  NextToken?: string;
}
export declare class MaxActiveResourcesExceededException extends __BaseException {
  readonly name: "MaxActiveResourcesExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxActiveResourcesExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfConfigRulesExceededException extends __BaseException {
  readonly name: "MaxNumberOfConfigRulesExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfConfigRulesExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfConfigurationRecordersExceededException extends __BaseException {
  readonly name: "MaxNumberOfConfigurationRecordersExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfConfigurationRecordersExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfConformancePacksExceededException extends __BaseException {
  readonly name: "MaxNumberOfConformancePacksExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfConformancePacksExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfDeliveryChannelsExceededException extends __BaseException {
  readonly name: "MaxNumberOfDeliveryChannelsExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfDeliveryChannelsExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfOrganizationConfigRulesExceededException extends __BaseException {
  readonly name: "MaxNumberOfOrganizationConfigRulesExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfOrganizationConfigRulesExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfOrganizationConformancePacksExceededException extends __BaseException {
  readonly name: "MaxNumberOfOrganizationConformancePacksExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfOrganizationConformancePacksExceededException,
      __BaseException
    >
  );
}
export declare class MaxNumberOfRetentionConfigurationsExceededException extends __BaseException {
  readonly name: "MaxNumberOfRetentionConfigurationsExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MaxNumberOfRetentionConfigurationsExceededException,
      __BaseException
    >
  );
}
export declare class NoAvailableDeliveryChannelException extends __BaseException {
  readonly name: "NoAvailableDeliveryChannelException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoAvailableDeliveryChannelException,
      __BaseException
    >
  );
}
export declare class NoAvailableOrganizationException extends __BaseException {
  readonly name: "NoAvailableOrganizationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NoAvailableOrganizationException,
      __BaseException
    >
  );
}
export declare class NoSuchBucketException extends __BaseException {
  readonly name: "NoSuchBucketException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchBucketException, __BaseException>
  );
}
export declare class OrganizationAllFeaturesNotEnabledException extends __BaseException {
  readonly name: "OrganizationAllFeaturesNotEnabledException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      OrganizationAllFeaturesNotEnabledException,
      __BaseException
    >
  );
}
export declare class OrganizationConformancePackTemplateValidationException extends __BaseException {
  readonly name: "OrganizationConformancePackTemplateValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      OrganizationConformancePackTemplateValidationException,
      __BaseException
    >
  );
}
export interface OrganizationCustomPolicyRuleMetadata {
  Description?: string;
  OrganizationConfigRuleTriggerTypes?: (
    | OrganizationConfigRuleTriggerTypeNoSN
    | string
  )[];
  InputParameters?: string;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | string;
  ResourceTypesScope?: string[];
  ResourceIdScope?: string;
  TagKeyScope?: string;
  TagValueScope?: string;
  PolicyRuntime: string | undefined;
  PolicyText: string | undefined;
  DebugLogDeliveryAccounts?: string[];
}
export interface PutAggregationAuthorizationRequest {
  AuthorizedAccountId: string | undefined;
  AuthorizedAwsRegion: string | undefined;
  Tags?: Tag[];
}
export interface PutAggregationAuthorizationResponse {
  AggregationAuthorization?: AggregationAuthorization;
}
export interface PutConfigRuleRequest {
  ConfigRule: ConfigRule | undefined;
  Tags?: Tag[];
}
export interface PutConfigurationAggregatorRequest {
  ConfigurationAggregatorName: string | undefined;
  AccountAggregationSources?: AccountAggregationSource[];
  OrganizationAggregationSource?: OrganizationAggregationSource;
  Tags?: Tag[];
}
export interface PutConfigurationAggregatorResponse {
  ConfigurationAggregator?: ConfigurationAggregator;
}
export interface PutConfigurationRecorderRequest {
  ConfigurationRecorder: ConfigurationRecorder | undefined;
}
export declare const AccountAggregationSourceFilterSensitiveLog: (
  obj: AccountAggregationSource
) => any;
export declare const ComplianceContributorCountFilterSensitiveLog: (
  obj: ComplianceContributorCount
) => any;
export declare const ComplianceFilterSensitiveLog: (obj: Compliance) => any;
export declare const AggregateComplianceByConfigRuleFilterSensitiveLog: (
  obj: AggregateComplianceByConfigRule
) => any;
export declare const AggregateConformancePackComplianceFilterSensitiveLog: (
  obj: AggregateConformancePackCompliance
) => any;
export declare const AggregateComplianceByConformancePackFilterSensitiveLog: (
  obj: AggregateComplianceByConformancePack
) => any;
export declare const ComplianceSummaryFilterSensitiveLog: (
  obj: ComplianceSummary
) => any;
export declare const AggregateComplianceCountFilterSensitiveLog: (
  obj: AggregateComplianceCount
) => any;
export declare const AggregateConformancePackComplianceCountFilterSensitiveLog: (
  obj: AggregateConformancePackComplianceCount
) => any;
export declare const AggregateConformancePackComplianceFiltersFilterSensitiveLog: (
  obj: AggregateConformancePackComplianceFilters
) => any;
export declare const AggregateConformancePackComplianceSummaryFilterSensitiveLog: (
  obj: AggregateConformancePackComplianceSummary
) => any;
export declare const AggregateConformancePackComplianceSummaryFiltersFilterSensitiveLog: (
  obj: AggregateConformancePackComplianceSummaryFilters
) => any;
export declare const AggregatedSourceStatusFilterSensitiveLog: (
  obj: AggregatedSourceStatus
) => any;
export declare const EvaluationResultQualifierFilterSensitiveLog: (
  obj: EvaluationResultQualifier
) => any;
export declare const EvaluationResultIdentifierFilterSensitiveLog: (
  obj: EvaluationResultIdentifier
) => any;
export declare const AggregateEvaluationResultFilterSensitiveLog: (
  obj: AggregateEvaluationResult
) => any;
export declare const AggregateResourceIdentifierFilterSensitiveLog: (
  obj: AggregateResourceIdentifier
) => any;
export declare const AggregationAuthorizationFilterSensitiveLog: (
  obj: AggregationAuthorization
) => any;
export declare const BaseConfigurationItemFilterSensitiveLog: (
  obj: BaseConfigurationItem
) => any;
export declare const BatchGetAggregateResourceConfigRequestFilterSensitiveLog: (
  obj: BatchGetAggregateResourceConfigRequest
) => any;
export declare const BatchGetAggregateResourceConfigResponseFilterSensitiveLog: (
  obj: BatchGetAggregateResourceConfigResponse
) => any;
export declare const ResourceKeyFilterSensitiveLog: (obj: ResourceKey) => any;
export declare const BatchGetResourceConfigRequestFilterSensitiveLog: (
  obj: BatchGetResourceConfigRequest
) => any;
export declare const BatchGetResourceConfigResponseFilterSensitiveLog: (
  obj: BatchGetResourceConfigResponse
) => any;
export declare const ComplianceByConfigRuleFilterSensitiveLog: (
  obj: ComplianceByConfigRule
) => any;
export declare const ComplianceByResourceFilterSensitiveLog: (
  obj: ComplianceByResource
) => any;
export declare const ComplianceSummaryByResourceTypeFilterSensitiveLog: (
  obj: ComplianceSummaryByResourceType
) => any;
export declare const ConfigExportDeliveryInfoFilterSensitiveLog: (
  obj: ConfigExportDeliveryInfo
) => any;
export declare const ScopeFilterSensitiveLog: (obj: Scope) => any;
export declare const CustomPolicyDetailsFilterSensitiveLog: (
  obj: CustomPolicyDetails
) => any;
export declare const SourceDetailFilterSensitiveLog: (obj: SourceDetail) => any;
export declare const SourceFilterSensitiveLog: (obj: Source) => any;
export declare const ConfigRuleFilterSensitiveLog: (obj: ConfigRule) => any;
export declare const ConfigRuleComplianceFiltersFilterSensitiveLog: (
  obj: ConfigRuleComplianceFilters
) => any;
export declare const ConfigRuleComplianceSummaryFiltersFilterSensitiveLog: (
  obj: ConfigRuleComplianceSummaryFilters
) => any;
export declare const ConfigRuleEvaluationStatusFilterSensitiveLog: (
  obj: ConfigRuleEvaluationStatus
) => any;
export declare const ConfigSnapshotDeliveryPropertiesFilterSensitiveLog: (
  obj: ConfigSnapshotDeliveryProperties
) => any;
export declare const ConfigStreamDeliveryInfoFilterSensitiveLog: (
  obj: ConfigStreamDeliveryInfo
) => any;
export declare const OrganizationAggregationSourceFilterSensitiveLog: (
  obj: OrganizationAggregationSource
) => any;
export declare const ConfigurationAggregatorFilterSensitiveLog: (
  obj: ConfigurationAggregator
) => any;
export declare const RelationshipFilterSensitiveLog: (obj: Relationship) => any;
export declare const ConfigurationItemFilterSensitiveLog: (
  obj: ConfigurationItem
) => any;
export declare const RecordingGroupFilterSensitiveLog: (
  obj: RecordingGroup
) => any;
export declare const ConfigurationRecorderFilterSensitiveLog: (
  obj: ConfigurationRecorder
) => any;
export declare const ConfigurationRecorderStatusFilterSensitiveLog: (
  obj: ConfigurationRecorderStatus
) => any;
export declare const ConformancePackComplianceFiltersFilterSensitiveLog: (
  obj: ConformancePackComplianceFilters
) => any;
export declare const ConformancePackComplianceScoreFilterSensitiveLog: (
  obj: ConformancePackComplianceScore
) => any;
export declare const ConformancePackComplianceScoresFiltersFilterSensitiveLog: (
  obj: ConformancePackComplianceScoresFilters
) => any;
export declare const ConformancePackComplianceSummaryFilterSensitiveLog: (
  obj: ConformancePackComplianceSummary
) => any;
export declare const ConformancePackInputParameterFilterSensitiveLog: (
  obj: ConformancePackInputParameter
) => any;
export declare const TemplateSSMDocumentDetailsFilterSensitiveLog: (
  obj: TemplateSSMDocumentDetails
) => any;
export declare const ConformancePackDetailFilterSensitiveLog: (
  obj: ConformancePackDetail
) => any;
export declare const ConformancePackEvaluationFiltersFilterSensitiveLog: (
  obj: ConformancePackEvaluationFilters
) => any;
export declare const ConformancePackEvaluationResultFilterSensitiveLog: (
  obj: ConformancePackEvaluationResult
) => any;
export declare const ConformancePackRuleComplianceFilterSensitiveLog: (
  obj: ConformancePackRuleCompliance
) => any;
export declare const ConformancePackStatusDetailFilterSensitiveLog: (
  obj: ConformancePackStatusDetail
) => any;
export declare const DeleteAggregationAuthorizationRequestFilterSensitiveLog: (
  obj: DeleteAggregationAuthorizationRequest
) => any;
export declare const DeleteConfigRuleRequestFilterSensitiveLog: (
  obj: DeleteConfigRuleRequest
) => any;
export declare const DeleteConfigurationAggregatorRequestFilterSensitiveLog: (
  obj: DeleteConfigurationAggregatorRequest
) => any;
export declare const DeleteConfigurationRecorderRequestFilterSensitiveLog: (
  obj: DeleteConfigurationRecorderRequest
) => any;
export declare const DeleteConformancePackRequestFilterSensitiveLog: (
  obj: DeleteConformancePackRequest
) => any;
export declare const DeleteDeliveryChannelRequestFilterSensitiveLog: (
  obj: DeleteDeliveryChannelRequest
) => any;
export declare const DeleteEvaluationResultsRequestFilterSensitiveLog: (
  obj: DeleteEvaluationResultsRequest
) => any;
export declare const DeleteEvaluationResultsResponseFilterSensitiveLog: (
  obj: DeleteEvaluationResultsResponse
) => any;
export declare const DeleteOrganizationConfigRuleRequestFilterSensitiveLog: (
  obj: DeleteOrganizationConfigRuleRequest
) => any;
export declare const DeleteOrganizationConformancePackRequestFilterSensitiveLog: (
  obj: DeleteOrganizationConformancePackRequest
) => any;
export declare const DeletePendingAggregationRequestRequestFilterSensitiveLog: (
  obj: DeletePendingAggregationRequestRequest
) => any;
export declare const DeleteRemediationConfigurationRequestFilterSensitiveLog: (
  obj: DeleteRemediationConfigurationRequest
) => any;
export declare const DeleteRemediationConfigurationResponseFilterSensitiveLog: (
  obj: DeleteRemediationConfigurationResponse
) => any;
export declare const RemediationExceptionResourceKeyFilterSensitiveLog: (
  obj: RemediationExceptionResourceKey
) => any;
export declare const DeleteRemediationExceptionsRequestFilterSensitiveLog: (
  obj: DeleteRemediationExceptionsRequest
) => any;
export declare const FailedDeleteRemediationExceptionsBatchFilterSensitiveLog: (
  obj: FailedDeleteRemediationExceptionsBatch
) => any;
export declare const DeleteRemediationExceptionsResponseFilterSensitiveLog: (
  obj: DeleteRemediationExceptionsResponse
) => any;
export declare const DeleteResourceConfigRequestFilterSensitiveLog: (
  obj: DeleteResourceConfigRequest
) => any;
export declare const DeleteRetentionConfigurationRequestFilterSensitiveLog: (
  obj: DeleteRetentionConfigurationRequest
) => any;
export declare const DeleteStoredQueryRequestFilterSensitiveLog: (
  obj: DeleteStoredQueryRequest
) => any;
export declare const DeleteStoredQueryResponseFilterSensitiveLog: (
  obj: DeleteStoredQueryResponse
) => any;
export declare const DeliverConfigSnapshotRequestFilterSensitiveLog: (
  obj: DeliverConfigSnapshotRequest
) => any;
export declare const DeliverConfigSnapshotResponseFilterSensitiveLog: (
  obj: DeliverConfigSnapshotResponse
) => any;
export declare const DeliveryChannelFilterSensitiveLog: (
  obj: DeliveryChannel
) => any;
export declare const DeliveryChannelStatusFilterSensitiveLog: (
  obj: DeliveryChannelStatus
) => any;
export declare const DescribeAggregateComplianceByConfigRulesRequestFilterSensitiveLog: (
  obj: DescribeAggregateComplianceByConfigRulesRequest
) => any;
export declare const DescribeAggregateComplianceByConfigRulesResponseFilterSensitiveLog: (
  obj: DescribeAggregateComplianceByConfigRulesResponse
) => any;
export declare const DescribeAggregateComplianceByConformancePacksRequestFilterSensitiveLog: (
  obj: DescribeAggregateComplianceByConformancePacksRequest
) => any;
export declare const DescribeAggregateComplianceByConformancePacksResponseFilterSensitiveLog: (
  obj: DescribeAggregateComplianceByConformancePacksResponse
) => any;
export declare const DescribeAggregationAuthorizationsRequestFilterSensitiveLog: (
  obj: DescribeAggregationAuthorizationsRequest
) => any;
export declare const DescribeAggregationAuthorizationsResponseFilterSensitiveLog: (
  obj: DescribeAggregationAuthorizationsResponse
) => any;
export declare const DescribeComplianceByConfigRuleRequestFilterSensitiveLog: (
  obj: DescribeComplianceByConfigRuleRequest
) => any;
export declare const DescribeComplianceByConfigRuleResponseFilterSensitiveLog: (
  obj: DescribeComplianceByConfigRuleResponse
) => any;
export declare const DescribeComplianceByResourceRequestFilterSensitiveLog: (
  obj: DescribeComplianceByResourceRequest
) => any;
export declare const DescribeComplianceByResourceResponseFilterSensitiveLog: (
  obj: DescribeComplianceByResourceResponse
) => any;
export declare const DescribeConfigRuleEvaluationStatusRequestFilterSensitiveLog: (
  obj: DescribeConfigRuleEvaluationStatusRequest
) => any;
export declare const DescribeConfigRuleEvaluationStatusResponseFilterSensitiveLog: (
  obj: DescribeConfigRuleEvaluationStatusResponse
) => any;
export declare const DescribeConfigRulesRequestFilterSensitiveLog: (
  obj: DescribeConfigRulesRequest
) => any;
export declare const DescribeConfigRulesResponseFilterSensitiveLog: (
  obj: DescribeConfigRulesResponse
) => any;
export declare const DescribeConfigurationAggregatorsRequestFilterSensitiveLog: (
  obj: DescribeConfigurationAggregatorsRequest
) => any;
export declare const DescribeConfigurationAggregatorsResponseFilterSensitiveLog: (
  obj: DescribeConfigurationAggregatorsResponse
) => any;
export declare const DescribeConfigurationAggregatorSourcesStatusRequestFilterSensitiveLog: (
  obj: DescribeConfigurationAggregatorSourcesStatusRequest
) => any;
export declare const DescribeConfigurationAggregatorSourcesStatusResponseFilterSensitiveLog: (
  obj: DescribeConfigurationAggregatorSourcesStatusResponse
) => any;
export declare const DescribeConfigurationRecordersRequestFilterSensitiveLog: (
  obj: DescribeConfigurationRecordersRequest
) => any;
export declare const DescribeConfigurationRecordersResponseFilterSensitiveLog: (
  obj: DescribeConfigurationRecordersResponse
) => any;
export declare const DescribeConfigurationRecorderStatusRequestFilterSensitiveLog: (
  obj: DescribeConfigurationRecorderStatusRequest
) => any;
export declare const DescribeConfigurationRecorderStatusResponseFilterSensitiveLog: (
  obj: DescribeConfigurationRecorderStatusResponse
) => any;
export declare const DescribeConformancePackComplianceRequestFilterSensitiveLog: (
  obj: DescribeConformancePackComplianceRequest
) => any;
export declare const DescribeConformancePackComplianceResponseFilterSensitiveLog: (
  obj: DescribeConformancePackComplianceResponse
) => any;
export declare const DescribeConformancePacksRequestFilterSensitiveLog: (
  obj: DescribeConformancePacksRequest
) => any;
export declare const DescribeConformancePacksResponseFilterSensitiveLog: (
  obj: DescribeConformancePacksResponse
) => any;
export declare const DescribeConformancePackStatusRequestFilterSensitiveLog: (
  obj: DescribeConformancePackStatusRequest
) => any;
export declare const DescribeConformancePackStatusResponseFilterSensitiveLog: (
  obj: DescribeConformancePackStatusResponse
) => any;
export declare const DescribeDeliveryChannelsRequestFilterSensitiveLog: (
  obj: DescribeDeliveryChannelsRequest
) => any;
export declare const DescribeDeliveryChannelsResponseFilterSensitiveLog: (
  obj: DescribeDeliveryChannelsResponse
) => any;
export declare const DescribeDeliveryChannelStatusRequestFilterSensitiveLog: (
  obj: DescribeDeliveryChannelStatusRequest
) => any;
export declare const DescribeDeliveryChannelStatusResponseFilterSensitiveLog: (
  obj: DescribeDeliveryChannelStatusResponse
) => any;
export declare const DescribeOrganizationConfigRulesRequestFilterSensitiveLog: (
  obj: DescribeOrganizationConfigRulesRequest
) => any;
export declare const OrganizationCustomPolicyRuleMetadataNoPolicyFilterSensitiveLog: (
  obj: OrganizationCustomPolicyRuleMetadataNoPolicy
) => any;
export declare const OrganizationCustomRuleMetadataFilterSensitiveLog: (
  obj: OrganizationCustomRuleMetadata
) => any;
export declare const OrganizationManagedRuleMetadataFilterSensitiveLog: (
  obj: OrganizationManagedRuleMetadata
) => any;
export declare const OrganizationConfigRuleFilterSensitiveLog: (
  obj: OrganizationConfigRule
) => any;
export declare const DescribeOrganizationConfigRulesResponseFilterSensitiveLog: (
  obj: DescribeOrganizationConfigRulesResponse
) => any;
export declare const DescribeOrganizationConfigRuleStatusesRequestFilterSensitiveLog: (
  obj: DescribeOrganizationConfigRuleStatusesRequest
) => any;
export declare const OrganizationConfigRuleStatusFilterSensitiveLog: (
  obj: OrganizationConfigRuleStatus
) => any;
export declare const DescribeOrganizationConfigRuleStatusesResponseFilterSensitiveLog: (
  obj: DescribeOrganizationConfigRuleStatusesResponse
) => any;
export declare const DescribeOrganizationConformancePacksRequestFilterSensitiveLog: (
  obj: DescribeOrganizationConformancePacksRequest
) => any;
export declare const OrganizationConformancePackFilterSensitiveLog: (
  obj: OrganizationConformancePack
) => any;
export declare const DescribeOrganizationConformancePacksResponseFilterSensitiveLog: (
  obj: DescribeOrganizationConformancePacksResponse
) => any;
export declare const DescribeOrganizationConformancePackStatusesRequestFilterSensitiveLog: (
  obj: DescribeOrganizationConformancePackStatusesRequest
) => any;
export declare const OrganizationConformancePackStatusFilterSensitiveLog: (
  obj: OrganizationConformancePackStatus
) => any;
export declare const DescribeOrganizationConformancePackStatusesResponseFilterSensitiveLog: (
  obj: DescribeOrganizationConformancePackStatusesResponse
) => any;
export declare const DescribePendingAggregationRequestsRequestFilterSensitiveLog: (
  obj: DescribePendingAggregationRequestsRequest
) => any;
export declare const PendingAggregationRequestFilterSensitiveLog: (
  obj: PendingAggregationRequest
) => any;
export declare const DescribePendingAggregationRequestsResponseFilterSensitiveLog: (
  obj: DescribePendingAggregationRequestsResponse
) => any;
export declare const DescribeRemediationConfigurationsRequestFilterSensitiveLog: (
  obj: DescribeRemediationConfigurationsRequest
) => any;
export declare const SsmControlsFilterSensitiveLog: (obj: SsmControls) => any;
export declare const ExecutionControlsFilterSensitiveLog: (
  obj: ExecutionControls
) => any;
export declare const ResourceValueFilterSensitiveLog: (
  obj: ResourceValue
) => any;
export declare const StaticValueFilterSensitiveLog: (obj: StaticValue) => any;
export declare const RemediationParameterValueFilterSensitiveLog: (
  obj: RemediationParameterValue
) => any;
export declare const RemediationConfigurationFilterSensitiveLog: (
  obj: RemediationConfiguration
) => any;
export declare const DescribeRemediationConfigurationsResponseFilterSensitiveLog: (
  obj: DescribeRemediationConfigurationsResponse
) => any;
export declare const DescribeRemediationExceptionsRequestFilterSensitiveLog: (
  obj: DescribeRemediationExceptionsRequest
) => any;
export declare const RemediationExceptionFilterSensitiveLog: (
  obj: RemediationException
) => any;
export declare const DescribeRemediationExceptionsResponseFilterSensitiveLog: (
  obj: DescribeRemediationExceptionsResponse
) => any;
export declare const DescribeRemediationExecutionStatusRequestFilterSensitiveLog: (
  obj: DescribeRemediationExecutionStatusRequest
) => any;
export declare const RemediationExecutionStepFilterSensitiveLog: (
  obj: RemediationExecutionStep
) => any;
export declare const RemediationExecutionStatusFilterSensitiveLog: (
  obj: RemediationExecutionStatus
) => any;
export declare const DescribeRemediationExecutionStatusResponseFilterSensitiveLog: (
  obj: DescribeRemediationExecutionStatusResponse
) => any;
export declare const DescribeRetentionConfigurationsRequestFilterSensitiveLog: (
  obj: DescribeRetentionConfigurationsRequest
) => any;
export declare const RetentionConfigurationFilterSensitiveLog: (
  obj: RetentionConfiguration
) => any;
export declare const DescribeRetentionConfigurationsResponseFilterSensitiveLog: (
  obj: DescribeRetentionConfigurationsResponse
) => any;
export declare const EvaluationFilterSensitiveLog: (obj: Evaluation) => any;
export declare const EvaluationResultFilterSensitiveLog: (
  obj: EvaluationResult
) => any;
export declare const ExternalEvaluationFilterSensitiveLog: (
  obj: ExternalEvaluation
) => any;
export declare const FailedRemediationBatchFilterSensitiveLog: (
  obj: FailedRemediationBatch
) => any;
export declare const FailedRemediationExceptionBatchFilterSensitiveLog: (
  obj: FailedRemediationExceptionBatch
) => any;
export declare const FieldInfoFilterSensitiveLog: (obj: FieldInfo) => any;
export declare const GetAggregateComplianceDetailsByConfigRuleRequestFilterSensitiveLog: (
  obj: GetAggregateComplianceDetailsByConfigRuleRequest
) => any;
export declare const GetAggregateComplianceDetailsByConfigRuleResponseFilterSensitiveLog: (
  obj: GetAggregateComplianceDetailsByConfigRuleResponse
) => any;
export declare const GetAggregateConfigRuleComplianceSummaryRequestFilterSensitiveLog: (
  obj: GetAggregateConfigRuleComplianceSummaryRequest
) => any;
export declare const GetAggregateConfigRuleComplianceSummaryResponseFilterSensitiveLog: (
  obj: GetAggregateConfigRuleComplianceSummaryResponse
) => any;
export declare const GetAggregateConformancePackComplianceSummaryRequestFilterSensitiveLog: (
  obj: GetAggregateConformancePackComplianceSummaryRequest
) => any;
export declare const GetAggregateConformancePackComplianceSummaryResponseFilterSensitiveLog: (
  obj: GetAggregateConformancePackComplianceSummaryResponse
) => any;
export declare const ResourceCountFiltersFilterSensitiveLog: (
  obj: ResourceCountFilters
) => any;
export declare const GetAggregateDiscoveredResourceCountsRequestFilterSensitiveLog: (
  obj: GetAggregateDiscoveredResourceCountsRequest
) => any;
export declare const GroupedResourceCountFilterSensitiveLog: (
  obj: GroupedResourceCount
) => any;
export declare const GetAggregateDiscoveredResourceCountsResponseFilterSensitiveLog: (
  obj: GetAggregateDiscoveredResourceCountsResponse
) => any;
export declare const GetAggregateResourceConfigRequestFilterSensitiveLog: (
  obj: GetAggregateResourceConfigRequest
) => any;
export declare const GetAggregateResourceConfigResponseFilterSensitiveLog: (
  obj: GetAggregateResourceConfigResponse
) => any;
export declare const GetComplianceDetailsByConfigRuleRequestFilterSensitiveLog: (
  obj: GetComplianceDetailsByConfigRuleRequest
) => any;
export declare const GetComplianceDetailsByConfigRuleResponseFilterSensitiveLog: (
  obj: GetComplianceDetailsByConfigRuleResponse
) => any;
export declare const GetComplianceDetailsByResourceRequestFilterSensitiveLog: (
  obj: GetComplianceDetailsByResourceRequest
) => any;
export declare const GetComplianceDetailsByResourceResponseFilterSensitiveLog: (
  obj: GetComplianceDetailsByResourceResponse
) => any;
export declare const GetComplianceSummaryByConfigRuleResponseFilterSensitiveLog: (
  obj: GetComplianceSummaryByConfigRuleResponse
) => any;
export declare const GetComplianceSummaryByResourceTypeRequestFilterSensitiveLog: (
  obj: GetComplianceSummaryByResourceTypeRequest
) => any;
export declare const GetComplianceSummaryByResourceTypeResponseFilterSensitiveLog: (
  obj: GetComplianceSummaryByResourceTypeResponse
) => any;
export declare const GetConformancePackComplianceDetailsRequestFilterSensitiveLog: (
  obj: GetConformancePackComplianceDetailsRequest
) => any;
export declare const GetConformancePackComplianceDetailsResponseFilterSensitiveLog: (
  obj: GetConformancePackComplianceDetailsResponse
) => any;
export declare const GetConformancePackComplianceSummaryRequestFilterSensitiveLog: (
  obj: GetConformancePackComplianceSummaryRequest
) => any;
export declare const GetConformancePackComplianceSummaryResponseFilterSensitiveLog: (
  obj: GetConformancePackComplianceSummaryResponse
) => any;
export declare const GetCustomRulePolicyRequestFilterSensitiveLog: (
  obj: GetCustomRulePolicyRequest
) => any;
export declare const GetCustomRulePolicyResponseFilterSensitiveLog: (
  obj: GetCustomRulePolicyResponse
) => any;
export declare const GetDiscoveredResourceCountsRequestFilterSensitiveLog: (
  obj: GetDiscoveredResourceCountsRequest
) => any;
export declare const ResourceCountFilterSensitiveLog: (
  obj: ResourceCount
) => any;
export declare const GetDiscoveredResourceCountsResponseFilterSensitiveLog: (
  obj: GetDiscoveredResourceCountsResponse
) => any;
export declare const StatusDetailFiltersFilterSensitiveLog: (
  obj: StatusDetailFilters
) => any;
export declare const GetOrganizationConfigRuleDetailedStatusRequestFilterSensitiveLog: (
  obj: GetOrganizationConfigRuleDetailedStatusRequest
) => any;
export declare const MemberAccountStatusFilterSensitiveLog: (
  obj: MemberAccountStatus
) => any;
export declare const GetOrganizationConfigRuleDetailedStatusResponseFilterSensitiveLog: (
  obj: GetOrganizationConfigRuleDetailedStatusResponse
) => any;
export declare const OrganizationResourceDetailedStatusFiltersFilterSensitiveLog: (
  obj: OrganizationResourceDetailedStatusFilters
) => any;
export declare const GetOrganizationConformancePackDetailedStatusRequestFilterSensitiveLog: (
  obj: GetOrganizationConformancePackDetailedStatusRequest
) => any;
export declare const OrganizationConformancePackDetailedStatusFilterSensitiveLog: (
  obj: OrganizationConformancePackDetailedStatus
) => any;
export declare const GetOrganizationConformancePackDetailedStatusResponseFilterSensitiveLog: (
  obj: GetOrganizationConformancePackDetailedStatusResponse
) => any;
export declare const GetOrganizationCustomRulePolicyRequestFilterSensitiveLog: (
  obj: GetOrganizationCustomRulePolicyRequest
) => any;
export declare const GetOrganizationCustomRulePolicyResponseFilterSensitiveLog: (
  obj: GetOrganizationCustomRulePolicyResponse
) => any;
export declare const GetResourceConfigHistoryRequestFilterSensitiveLog: (
  obj: GetResourceConfigHistoryRequest
) => any;
export declare const GetResourceConfigHistoryResponseFilterSensitiveLog: (
  obj: GetResourceConfigHistoryResponse
) => any;
export declare const GetStoredQueryRequestFilterSensitiveLog: (
  obj: GetStoredQueryRequest
) => any;
export declare const StoredQueryFilterSensitiveLog: (obj: StoredQuery) => any;
export declare const GetStoredQueryResponseFilterSensitiveLog: (
  obj: GetStoredQueryResponse
) => any;
export declare const ResourceFiltersFilterSensitiveLog: (
  obj: ResourceFilters
) => any;
export declare const ListAggregateDiscoveredResourcesRequestFilterSensitiveLog: (
  obj: ListAggregateDiscoveredResourcesRequest
) => any;
export declare const ListAggregateDiscoveredResourcesResponseFilterSensitiveLog: (
  obj: ListAggregateDiscoveredResourcesResponse
) => any;
export declare const ListConformancePackComplianceScoresRequestFilterSensitiveLog: (
  obj: ListConformancePackComplianceScoresRequest
) => any;
export declare const ListConformancePackComplianceScoresResponseFilterSensitiveLog: (
  obj: ListConformancePackComplianceScoresResponse
) => any;
export declare const ListDiscoveredResourcesRequestFilterSensitiveLog: (
  obj: ListDiscoveredResourcesRequest
) => any;
export declare const ResourceIdentifierFilterSensitiveLog: (
  obj: ResourceIdentifier
) => any;
export declare const ListDiscoveredResourcesResponseFilterSensitiveLog: (
  obj: ListDiscoveredResourcesResponse
) => any;
export declare const ListStoredQueriesRequestFilterSensitiveLog: (
  obj: ListStoredQueriesRequest
) => any;
export declare const StoredQueryMetadataFilterSensitiveLog: (
  obj: StoredQueryMetadata
) => any;
export declare const ListStoredQueriesResponseFilterSensitiveLog: (
  obj: ListStoredQueriesResponse
) => any;
export declare const ListTagsForResourceRequestFilterSensitiveLog: (
  obj: ListTagsForResourceRequest
) => any;
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const OrganizationCustomPolicyRuleMetadataFilterSensitiveLog: (
  obj: OrganizationCustomPolicyRuleMetadata
) => any;
export declare const PutAggregationAuthorizationRequestFilterSensitiveLog: (
  obj: PutAggregationAuthorizationRequest
) => any;
export declare const PutAggregationAuthorizationResponseFilterSensitiveLog: (
  obj: PutAggregationAuthorizationResponse
) => any;
export declare const PutConfigRuleRequestFilterSensitiveLog: (
  obj: PutConfigRuleRequest
) => any;
export declare const PutConfigurationAggregatorRequestFilterSensitiveLog: (
  obj: PutConfigurationAggregatorRequest
) => any;
export declare const PutConfigurationAggregatorResponseFilterSensitiveLog: (
  obj: PutConfigurationAggregatorResponse
) => any;
export declare const PutConfigurationRecorderRequestFilterSensitiveLog: (
  obj: PutConfigurationRecorderRequest
) => any;
