import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { ConfigServiceServiceException as __BaseException } from "./ConfigServiceServiceException";
import { FieldInfo, ResourceKey, RetentionConfiguration, StoredQuery, Tag } from "./models_0";
export interface PutResourceConfigRequest {
    
    ResourceType: string | undefined;
    
    SchemaVersionId: string | undefined;
    
    ResourceId: string | undefined;
    
    ResourceName?: string;
    
    Configuration: string | undefined;
    
    Tags?: {
        [key: string]: string;
    };
}
export declare namespace PutResourceConfigRequest {
    
    const filterSensitiveLog: (obj: PutResourceConfigRequest) => any;
}
export interface PutRetentionConfigurationRequest {
    
    RetentionPeriodInDays: number | undefined;
}
export declare namespace PutRetentionConfigurationRequest {
    
    const filterSensitiveLog: (obj: PutRetentionConfigurationRequest) => any;
}
export interface PutRetentionConfigurationResponse {
    
    RetentionConfiguration?: RetentionConfiguration;
}
export declare namespace PutRetentionConfigurationResponse {
    
    const filterSensitiveLog: (obj: PutRetentionConfigurationResponse) => any;
}
export interface PutStoredQueryRequest {
    
    StoredQuery: StoredQuery | undefined;
    
    Tags?: Tag[];
}
export declare namespace PutStoredQueryRequest {
    
    const filterSensitiveLog: (obj: PutStoredQueryRequest) => any;
}
export interface PutStoredQueryResponse {
    
    QueryArn?: string;
}
export declare namespace PutStoredQueryResponse {
    
    const filterSensitiveLog: (obj: PutStoredQueryResponse) => any;
}

export declare class ResourceConcurrentModificationException extends __BaseException {
    readonly name: "ResourceConcurrentModificationException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ResourceConcurrentModificationException, __BaseException>);
}

export declare class TooManyTagsException extends __BaseException {
    readonly name: "TooManyTagsException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<TooManyTagsException, __BaseException>);
}

export interface QueryInfo {
    
    SelectFields?: FieldInfo[];
}
export declare namespace QueryInfo {
    
    const filterSensitiveLog: (obj: QueryInfo) => any;
}
export interface SelectAggregateResourceConfigRequest {
    
    Expression: string | undefined;
    
    ConfigurationAggregatorName: string | undefined;
    
    Limit?: number;
    
    MaxResults?: number;
    
    NextToken?: string;
}
export declare namespace SelectAggregateResourceConfigRequest {
    
    const filterSensitiveLog: (obj: SelectAggregateResourceConfigRequest) => any;
}
export interface SelectAggregateResourceConfigResponse {
    
    Results?: string[];
    
    QueryInfo?: QueryInfo;
    
    NextToken?: string;
}
export declare namespace SelectAggregateResourceConfigResponse {
    
    const filterSensitiveLog: (obj: SelectAggregateResourceConfigResponse) => any;
}
export interface SelectResourceConfigRequest {
    
    Expression: string | undefined;
    
    Limit?: number;
    
    NextToken?: string;
}
export declare namespace SelectResourceConfigRequest {
    
    const filterSensitiveLog: (obj: SelectResourceConfigRequest) => any;
}
export interface SelectResourceConfigResponse {
    
    Results?: string[];
    
    QueryInfo?: QueryInfo;
    
    NextToken?: string;
}
export declare namespace SelectResourceConfigResponse {
    
    const filterSensitiveLog: (obj: SelectResourceConfigResponse) => any;
}

export interface StartConfigRulesEvaluationRequest {
    
    ConfigRuleNames?: string[];
}
export declare namespace StartConfigRulesEvaluationRequest {
    
    const filterSensitiveLog: (obj: StartConfigRulesEvaluationRequest) => any;
}

export interface StartConfigRulesEvaluationResponse {
}
export declare namespace StartConfigRulesEvaluationResponse {
    
    const filterSensitiveLog: (obj: StartConfigRulesEvaluationResponse) => any;
}

export interface StartConfigurationRecorderRequest {
    
    ConfigurationRecorderName: string | undefined;
}
export declare namespace StartConfigurationRecorderRequest {
    
    const filterSensitiveLog: (obj: StartConfigurationRecorderRequest) => any;
}
export interface StartRemediationExecutionRequest {
    
    ConfigRuleName: string | undefined;
    
    ResourceKeys: ResourceKey[] | undefined;
}
export declare namespace StartRemediationExecutionRequest {
    
    const filterSensitiveLog: (obj: StartRemediationExecutionRequest) => any;
}
export interface StartRemediationExecutionResponse {
    
    FailureMessage?: string;
    
    FailedItems?: ResourceKey[];
}
export declare namespace StartRemediationExecutionResponse {
    
    const filterSensitiveLog: (obj: StartRemediationExecutionResponse) => any;
}

export interface StopConfigurationRecorderRequest {
    
    ConfigurationRecorderName: string | undefined;
}
export declare namespace StopConfigurationRecorderRequest {
    
    const filterSensitiveLog: (obj: StopConfigurationRecorderRequest) => any;
}
export interface TagResourceRequest {
    
    ResourceArn: string | undefined;
    
    Tags: Tag[] | undefined;
}
export declare namespace TagResourceRequest {
    
    const filterSensitiveLog: (obj: TagResourceRequest) => any;
}
export interface UntagResourceRequest {
    
    ResourceArn: string | undefined;
    
    TagKeys: string[] | undefined;
}
export declare namespace UntagResourceRequest {
    
    const filterSensitiveLog: (obj: UntagResourceRequest) => any;
}
