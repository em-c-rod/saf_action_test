import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConfigServiceClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConfigServiceClient";
import { StartResourceEvaluationRequest, StartResourceEvaluationResponse } from "../models/models_1";
/**
 * The input for {@link StartResourceEvaluationCommand}.
 */
export interface StartResourceEvaluationCommandInput extends StartResourceEvaluationRequest {
}
/**
 * The output of {@link StartResourceEvaluationCommand}.
 */
export interface StartResourceEvaluationCommandOutput extends StartResourceEvaluationResponse, __MetadataBearer {
}
/**
 * <p>Runs an on-demand evaluation for the specified resource to determine whether the resource details will comply with configured Config rules.
 * 			You can also use it for evaluation purposes. Config recommends using an evaluation context. It runs an execution against the resource details with all
 * 			of the Config rules in your account that match with the specified proactive mode and resource type.</p>
 *
 * 		       <note>
 *             <p>Ensure you have the <code>cloudformation:DescribeType</code> role setup to validate the resource type schema.
 * 		</p>
 *          </note>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConfigServiceClient, StartResourceEvaluationCommand } from "@aws-sdk/client-config-service"; // ES Modules import
 * // const { ConfigServiceClient, StartResourceEvaluationCommand } = require("@aws-sdk/client-config-service"); // CommonJS import
 * const client = new ConfigServiceClient(config);
 * const command = new StartResourceEvaluationCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link StartResourceEvaluationCommandInput} for command's `input` shape.
 * @see {@link StartResourceEvaluationCommandOutput} for command's `response` shape.
 * @see {@link ConfigServiceClientResolvedConfig | config} for ConfigServiceClient's `config` shape.
 *
 */
export declare class StartResourceEvaluationCommand extends $Command<StartResourceEvaluationCommandInput, StartResourceEvaluationCommandOutput, ConfigServiceClientResolvedConfig> {
    readonly input: StartResourceEvaluationCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: StartResourceEvaluationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConfigServiceClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartResourceEvaluationCommandInput, StartResourceEvaluationCommandOutput>;
    private serialize;
    private deserialize;
}
