import { ExecJSON } from 'inspecjs';
import { BaseConverter, ILookupPath, MappedTransform } from './base-converter';
declare type ExternalProductHandlerOutputs = (() => string | number) | (() => string | undefined) | number | string | string[];
export declare class ASFFMapper extends BaseConverter {
    securityhubStandardsJsonArray: string[] | undefined;
    meta: Record<string, string | undefined> | null;
    supportingDocs: Map<RegExp, Record<string, Record<string, unknown>>>;
    mappings: MappedTransform<ExecJSON.Execution, ILookupPath>;
    statusReason(finding: unknown): string | undefined;
    externalProductHandler(product: string | RegExp, data: unknown, func: string, defaultVal: ExternalProductHandlerOutputs): string | string[] | number | undefined;
    consolidate(input: unknown[], file: unknown): ExecJSON.Control[];
    constructor(asffJson: string, securityhubStandardsJsonArray?: undefined | string[], meta?: null | Record<string, string | undefined>);
    setMappings(customMappings: MappedTransform<ExecJSON.Execution, ILookupPath>): void;
}
export {};
