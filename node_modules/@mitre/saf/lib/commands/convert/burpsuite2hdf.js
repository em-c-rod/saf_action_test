"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const fs_1 = (0, tslib_1.__importDefault)(require("fs"));
const hdf_converters_1 = require("@mitre/hdf-converters");
const global_1 = require("../../utils/global");
class Burpsuite2HDF extends command_1.Command {
    async run() {
        const { flags } = this.parse(Burpsuite2HDF);
        const converter = new hdf_converters_1.BurpSuiteMapper(fs_1.default.readFileSync(flags.input, 'utf-8'));
        fs_1.default.writeFileSync((0, global_1.checkSuffix)(flags.output), JSON.stringify(converter.toHdf()));
    }
}
exports.default = Burpsuite2HDF;
Burpsuite2HDF.usage = 'convert:burpsuite2hdf -i, --input=XML -o, --output=OUTPUT';
Burpsuite2HDF.description = 'Translate a BurpSuite Pro XML file into a Heimdall Data Format JSON file';
Burpsuite2HDF.examples = ['saf convert:burpsuite2hdf -i burpsuite_results.xml -o output-hdf-name.json'];
Burpsuite2HDF.flags = {
    help: command_1.flags.help({ char: 'h' }),
    input: command_1.flags.string({ char: 'i', required: true }),
    output: command_1.flags.string({ char: 'o', required: true }),
};
